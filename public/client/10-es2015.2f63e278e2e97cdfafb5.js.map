{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/slider.js","webpack:///src/common/admin/appearance/appearance-editor-config.token.ts","webpack:///src/common/shared/appearance/commands/appearance-commands.ts","webpack:///src/common/admin/appearance/appearance-editor/appearance-editor.service.ts","webpack:///src/common/core/utils/remove-duplicate-slashes.ts","webpack:///src/common/admin/appearance/appearance-panel-meta/appearance-panel-meta.component.html","webpack:///src/common/admin/appearance/appearance-panel-meta/appearance-panel-meta.component.ts","webpack:///src/common/admin/appearance/highlight-in-preview.directive.ts","webpack:///src/common/admin/appearance/appearance-image-input/appearance-image-input.component.html","webpack:///src/common/admin/appearance/appearance-image-input/appearance-image-input.component.ts","webpack:///src/common/core/ui/color-picker/color-picker-input/color-picker-input.component.ts","webpack:///src/common/core/ui/color-picker/color-picker-input/color-picker-input.component.html","webpack:///src/app/admin/appearance/homepage-appearance-panel/homepage-appearance-panel.component.html","webpack:///src/app/admin/appearance/homepage-appearance-panel/homepage-appearance-panel.component.ts","webpack:///src/app/admin/appearance/app-appearance-config.ts","webpack:///src/common/core/ui/color-picker/color-picker-input/color-picker-input.module.ts","webpack:///src/common/admin/appearance/panels/general-appearance-panel/general-appearance-panel.component.ts","webpack:///src/common/admin/appearance/panels/general-appearance-panel/general-appearance-panel.component.html","webpack:///src/common/admin/appearance/panels/themes-appearance-panel/css-theme.service.ts","webpack:///src/common/admin/appearance/panels/themes-appearance-panel/crupdate-css-theme-modal/crupdate-css-theme-modal.component.html","webpack:///src/common/admin/appearance/panels/themes-appearance-panel/crupdate-css-theme-modal/crupdate-css-theme-modal.component.ts","webpack:///src/common/admin/appearance/panels/themes-appearance-panel/css-theme-colors-panel/css-theme-colors-panel.component.html","webpack:///src/common/admin/appearance/panels/themes-appearance-panel/css-theme-colors-panel/css-theme-colors-panel.component.ts","webpack:///src/common/admin/appearance/panels/themes-appearance-panel/themes-appearance-panel.component.html","webpack:///src/common/admin/appearance/panels/themes-appearance-panel/themes-appearance-panel.component.ts","webpack:///src/common/core/ui/custom-menu/menu-item.ts","webpack:///src/common/admin/appearance/panels/menus-appearance-panel/menus/menu-editor.service.ts","webpack:///src/common/admin/appearance/panels/menus-appearance-panel/menus/item-categories/menu-item-categories.service.ts","webpack:///src/common/admin/appearance/panels/menus-appearance-panel/menus/add-menu-item-panel/add-menu-item-panel.component.html","webpack:///src/common/admin/appearance/panels/menus-appearance-panel/menus/add-menu-item-panel/add-menu-item-panel.component.ts","webpack:///src/common/shared/icon-selector/icon-selector.component.html","webpack:///src/common/shared/icon-selector/icon-selector.component.ts","webpack:///src/common/admin/appearance/panels/menus-appearance-panel/menus/menu-items/menu-items.component.html","webpack:///src/common/admin/appearance/panels/menus-appearance-panel/menus/menu-items/menu-items.component.ts","webpack:///src/common/admin/appearance/panels/menus-appearance-panel/menus-appearance-panel.component.html","webpack:///src/common/admin/appearance/panels/menus-appearance-panel/menus-appearance-panel.component.ts","webpack:///src/common/admin/appearance/panels/seo-appearance-panel/seo-appearance-panel.component.html","webpack:///src/common/admin/appearance/panels/seo-appearance-panel/seo-appearance-panel.component.ts","webpack:///src/common/admin/appearance/panels/custom-code-appearance-panel/code-editor-modal/code-editor-modal.component.html","webpack:///src/common/admin/appearance/panels/custom-code-appearance-panel/code-editor-modal/code-editor-modal.component.ts","webpack:///src/common/admin/appearance/panels/custom-code-appearance-panel/custom-code-appearance-panel.component.ts","webpack:///src/common/admin/appearance/panels/custom-code-appearance-panel/custom-code-appearance-panel.component.html","webpack:///src/common/admin/appearance/appearance.component.html","webpack:///src/common/admin/appearance/appearance.component.ts","webpack:///src/common/admin/appearance/can-deactivate-appearance.guard.ts","webpack:///src/common/admin/appearance/appearance-routing.module.ts","webpack:///src/common/admin/appearance/appearance-editor/appearance-editor-resolver.service.ts","webpack:///src/common/shared/icon-selector/icon-selector.module.ts","webpack:///src/common/admin/appearance/base-appearance.module.ts","webpack:///src/app/admin/appearance/app-appearance.module.ts","webpack:///src/common/core/ui/overlay-panel/positions/right-position.ts"],"names":["_c0","activeEventOptions","passive","MAT_SLIDER_VALUE_ACCESSOR","provide","useExisting","MatSlider","multi","MatSliderChange","MatSliderBase","_elementRef","this","_MatSliderMixinBase","elementRef","_focusMonitor","_changeDetectorRef","_dir","tabIndex","_ngZone","_document","_animationMode","super","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","change","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","EMPTY","_pointerDown","event","disabled","isTouchEvent","button","run","oldValue","value","pointerPosition","getPointerPositionOnPage","_lastPointerEvent","preventDefault","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_pointerPositionOnStart","_emitInputEvent","_emitChangeEvent","_pointerMove","_pointerUp","pointerPositionOnStart","currentPointerPosition","_removeGlobalEvents","x","y","_windowBlur","parseInt","runOutsideAngular","element","nativeElement","addEventListener","c","v","_calculatePercentage","markForCheck","_roundToDecimal","toString","split","pop","length","parseFloat","toFixed","displayWith","options","_blurHostElement","_clamp","vertical","invert","percent","_isMinValue","thumbLabel","scale","transform","_shouldInvertMouseCoords","_getThumbGap","display","_getDirection","tickSize","styles","shouldInvertAxis","_shouldInvertAxis","side","monitor","subscribe","origin","detectChanges","removeEventListener","stopMonitoring","unsubscribe","_getSliderDimensions","_updateTickIntervalPercent","keyCode","_increment","max","min","defaultView","window","triggerEvent","document","isTouch","endEventName","_getWindow","numSteps","step","pos","top","left","height","width","exactValue","_calculateValue","closestValue","Math","round","emit","_createChangeEvent","tickInterval","trackSize","stepsPerTick","ceil","source","percentage","_sliderWrapper","getBoundingClientRect","focus","blur","fn","isDisabled","ɵfac","t","ɵcmp","type","selectors","viewQuery","rf","ctx","_t","first","hostAttrs","hostVars","hostBindings","_onFocus","_onBlur","$event","_onKeydown","_onKeyup","inputs","color","outputs","exportAs","features","decls","vars","consts","template","_getTrackBackgroundStyles","_getTrackFillStyles","_getTicksContainerStyles","_getTicksStyles","_getThumbContainerStyles","displayValue","directives","encapsulation","changeDetection","point","touches","changedTouches","clientX","clientY","MatSliderModule","ɵmod","ɵinj","factory","imports","APPEARANCE_EDITOR_CONFIG","DEFAULT_APPEARANCE_EDITOR_CONFIG","navigationRoutes","menus","availableRoutes","positions","sections","name","position","route","queryParams","Navigate","key","SetConfig","selector","index","Select","Deselect","SetColors","content","SetCustomCss","SetCustomHtml","AppearanceEditor","settings","router","http","toast","activePanel$","BehaviorSubject","defaultSettings","initiated$","ReplaySubject","loading$","changes$","next","panel","config","find","navigate","iframe","fromEvent","pipe","filter","e","data","URL","location","hostname","complete","forEach","setting","initConfig","initIframe","changes","addChanges","observable","saveRequest","post","finalize","share","open","request","panelConfig","postMessage","defaultRoute","command","previewWindow","startsWith","get","merged","all","sort","a","b","url","getBaseUrl","src","replace","contentWindow","AppearancePanelMetaComponent","path","back","HighlightInPreviewDirective","el","editor","selectNode","deselectNode","AppearanceImageInputComponent","uploadQueue","validator","image$","showToast","params","uri","backendUri","Image","httpParams","diskPrefix","types","image","then","files","start","response","updateValue","fileEntry","defaultValue","propagateChange","openModal","stopPropagation","ColorPickerInputComponent","overlayPanel","color$","pickerSub","BeColorPickerModule","components","target","valueChanged","openColorPicker","CONFIG_KEY","APP_APPEARANCE_CONFIG","component","HomepageAppearancePanelComponent","fb","selectedSubpanel$","path$","map","push","form","group","headerTitle","headerSubtitle","headerImage","headerImageOpacity","headerOverlayColor1","headerOverlayColor2","footerTitle","footerSubtitle","footerImage","actions","inputText","inputButton","cta1","cta2","primaryFeatures","array","secondaryFeatures","channelIds","control","getJson","defaultValues","JSON","parse","addFeature","patchValue","valueChanges","setConfig","openSubpanel","closeActivePanel","title","subtitle","description","removeAt","openPreviousPanel","ColorPickerInputModule","GeneralAppearancePanelComponent","defaults","Object","keys","controls","currentValue","CssThemeService","id","put","ids","delete","CrupdateCssThemeModalComponent","dialogRef","cssTheme","errors$","is_dark","default_dark","default_light","theme","setValue","update","create","close","errResponse","errors","CssThemeColorsPanelComponent","themes","colorCache","setSaveRequest","saveColors","bind","entries","colors","addControl","setColors","payload","ThemesAppearancePanelComponent","appearance","modal","loadedThemes$","selectedTheme$","reloadThemes","querySub","afterClosed","newTheme","queryParamsHandling","setSelectedTheme","show","body","ok","confirmed","deleteTheme","pagination","bindToQueryParams","MenuItem","order","condition","activeExact","floor","random","MenuEditor","allMenus$","activeMenu$","allMenus","commitChanges","previousIndex","currentIndex","activeMenu","items","i","indexOf","splice","item","transformLocalLinksToRoutes","baseUrl","action","stringify","json","menuData","menu","MenuItemCategoriesService","getWithCache","AddMenuItemPanelComponent","overlayPanelRef","itemCategories","linkForm","label","menuItemCategories","categories","addItem","reset","addLinkMenuItem","IconSelectorComponent","icons$","iconSelected","icons","icon","observers","emitValue","MenuItemsComponent","cd","subscriptions","subscription","reorderActiveMenuItems","selectedMenuItem","removeItem","menuItem","MenusAppearancePanelComponent","setFromJson","slice","offsetX","panelClass","deleteActive","SeoAppearancePanelComponent","seoFields","field","CodeEditorModalComponent","lazyLoader","syntaxInvalid$","initEditor","contents","language","overrideDialogCloseEvents","getValue","loadAsset","ace","edit","editorEl","getSession","setMode","setTheme","$blockScrolling","Infinity","on","annotations","getAnnotations","test","text","setAnnotations","syntaxInvalid","disableClose","backdropClick","keydownEvents","confirm","CustomCodeAppearancePanelComponent","initialValue","undefined","newValue","saveChanges","addCodeToPreview","AppearanceComponent","breakpoints","leftColumnIsHidden","panelPortal$","isMobile$","init","snapshot","routerSub","openPanel","str","closeEditor","toggleLeftSidebar","CanDeactivateAppearance","bodyBold","cancel","routes","permissions","resolve","AppearanceEditorResolver","state","catchError","mergeMap","of","canActivate","canDeactivate","children","AppearanceRoutingModule","forChild","IconSelectorModule","BaseAppearanceModule","useValue","AppAppearanceModule","RIGHT_POSITION","originX","originY","overlayX","overlayY"],"mappings":"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","file":"x","sourcesContent":["import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, NgZone, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nclass MatSliderBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                const oldValue = this.value;\n                const pointerPosition = getPointerPositionOnPage(event);\n                this._isSliding = true;\n                this._lastPointerEvent = event;\n                event.preventDefault();\n                this._focusHostElement();\n                this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                this._bindGlobalEvents(event);\n                this._focusHostElement();\n                this._updateValueFromPosition(pointerPosition);\n                this._valueOnSlideStart = this.value;\n                this._pointerPositionOnStart = pointerPosition;\n                // Emit a change and input event if the value changed.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                    this._emitChangeEvent();\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding) {\n                // Prevent the slide from selecting anything else.\n                event.preventDefault();\n                const oldValue = this.value;\n                this._lastPointerEvent = event;\n                this._updateValueFromPosition(getPointerPositionOnPage(event));\n                // Native range elements always emit `input` events when the value changed while sliding.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding) {\n                const pointerPositionOnStart = this._pointerPositionOnStart;\n                const currentPointerPosition = getPointerPositionOnPage(event);\n                event.preventDefault();\n                this._removeGlobalEvents();\n                this._valueOnSlideStart = this._pointerPositionOnStart = this._lastPointerEvent = null;\n                this._isSliding = false;\n                if (this._valueOnSlideStart != this.value && !this.disabled &&\n                    pointerPositionOnStart && (pointerPositionOnStart.x !== currentPointerPosition.x ||\n                    pointerPositionOnStart.y !== currentPointerPosition.y)) {\n                    this._emitChangeEvent();\n                }\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    /** Whether the slider is inverted. */\n    get invert() { return this._invert; }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() { return this._max; }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() { return this._min; }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        // If the value wasn't explicitly set by the user, set it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() { return this._step; }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() { return this._thumbLabel; }\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() { return this._tickInterval; }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    _getThumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue() && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    _getTrackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`\n        };\n    }\n    /** CSS styles for the track fill element. */\n    _getTrackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    _getTicksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /** CSS styles for the ticks element. */\n    _getTicksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue() && this._getThumbGap()) {\n            const shouldInvertAxis = this._shouldInvertAxis();\n            let side;\n            if (this.vertical) {\n                side = shouldInvertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = shouldInvertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._getThumbGap()}px`;\n        }\n        return styles;\n    }\n    _getThumbContainerStyles() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event)) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    }\n    _onKeyup() {\n        this._isSliding = false;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"], hostVars: 28, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", value: \"value\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", vertical: \"vertical\", displayWith: \"displayWith\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelement(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, directives: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue()',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event) {\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n    return { x: point.clientX, y: point.clientY };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); }, imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n\n//# sourceMappingURL=slider.js.map","import {InjectionToken} from '@angular/core';\r\nimport {ComponentType} from '@angular/cdk/portal';\r\nimport {Params} from '@angular/router';\r\n\r\nexport interface AppearanceEditorConfig {\r\n    navigationRoutes: string[];\r\n    defaultRoute?: string;\r\n    sections?: AppearanceEditorField[];\r\n    menus: {\r\n        availableRoutes: string[],\r\n        positions?: string[],\r\n    };\r\n}\r\n\r\nexport interface AppearanceEditorField {\r\n    name: string;\r\n    component?: ComponentType<any>;\r\n    position?: number;\r\n    route?: string;\r\n    queryParams?: Params;\r\n}\r\n\r\nexport const APPEARANCE_EDITOR_CONFIG = new InjectionToken<AppearanceEditorConfig[]>('APPEARANCE_EDITOR_CONFIG');\r\n\r\nexport const DEFAULT_APPEARANCE_EDITOR_CONFIG: AppearanceEditorConfig = {\r\n    navigationRoutes: [],\r\n    menus: {\r\n        availableRoutes: [\r\n            'login',\r\n            'register',\r\n            'contact',\r\n            'billing/pricing',\r\n            'account-settings',\r\n            'admin/appearance',\r\n            'admin/users',\r\n            'admin/settings/authentication',\r\n            'admin/settings/branding',\r\n            'admin/settings/cache',\r\n            'admin/settings/providers',\r\n            'admin/roles',\r\n        ],\r\n        positions: [\r\n            'admin-navbar',\r\n            'custom-page-navbar',\r\n            'auth-page-footer',\r\n        ]\r\n    },\r\n    sections: [\r\n        {name: 'general', position: 1},\r\n        {name: 'themes', position: 2},\r\n        {name: 'menus', position: 3},\r\n        {name: 'custom-code', position: 4},\r\n        {name: 'seo-settings', position: 5}\r\n    ]\r\n};\r\n","import { AppearanceCommand } from './appearance-command';\r\nimport { CommandTypes } from './command-types';\r\nimport {Params} from '@angular/router';\r\n\r\nexport class Navigate implements AppearanceCommand {\r\n    type = CommandTypes.Navigate;\r\n    constructor(public route: string, public queryParams: Params) {}\r\n}\r\n\r\nexport class SetConfig implements AppearanceCommand {\r\n    type = CommandTypes.SetConfig;\r\n    constructor(public key: string, public value: string|number) {}\r\n}\r\n\r\nexport class Select implements AppearanceCommand {\r\n    type = CommandTypes.Select;\r\n    constructor(public selector: string, public index = 0) {}\r\n}\r\n\r\nexport class Deselect implements AppearanceCommand {\r\n    type = CommandTypes.Deselect;\r\n}\r\n\r\nexport class SetColors implements AppearanceCommand {\r\n    type = CommandTypes.SetColors;\r\n    constructor(public key: string, public value: string) {}\r\n}\r\n\r\nexport class SetCustomCss implements AppearanceCommand {\r\n    type = CommandTypes.SetCustomCss;\r\n    constructor(public content: string) {}\r\n}\r\n\r\nexport class SetCustomHtml implements AppearanceCommand {\r\n    type = CommandTypes.SetCustomHtml;\r\n    constructor(public content: string) {}\r\n}\r\n\r\nexport type AllCommands = Navigate | SetConfig | Select;\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {Deselect, Navigate, Select, SetConfig} from '@common/shared/appearance/commands/appearance-commands';\r\nimport {AppearanceCommand} from '@common/shared/appearance/commands/appearance-command';\r\nimport {APPEARANCE_TOKEN} from '@common/shared/appearance/appearance-listener.service';\r\nimport {BehaviorSubject, fromEvent, Observable, ReplaySubject} from 'rxjs';\r\nimport {filter, finalize, share} from 'rxjs/operators';\r\nimport {slugifyString} from '@common/core/utils/slugify-string';\r\nimport {CssThemeColors} from '@common/core/types/models/CssTheme';\r\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {GenericBackendResponse} from '@common/core/types/backend-response';\r\nimport {removeDuplicateSlashes} from '@common/core/utils/remove-duplicate-slashes';\r\nimport {AppearanceEditorConfig, AppearanceEditorField} from '@common/admin/appearance/appearance-editor-config.token';\r\nimport deepmerge from 'deepmerge';\r\n\r\nexport interface EditorChanges {\r\n    [key: string]: string|number|object;\r\n    colors?: CssThemeColors;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AppearanceEditor {\r\n    public activePanel$ = new BehaviorSubject<AppearanceEditorField>(null);\r\n    public defaultSettings: {[key: string]: any} = {};\r\n    public initiated$ = new ReplaySubject(1);\r\n    private previewWindow: Window;\r\n\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    private saveRequest: (changes: EditorChanges) => Observable<void>;\r\n    public changes$ = new BehaviorSubject<EditorChanges>(null);\r\n    public config: AppearanceEditorConfig;\r\n\r\n    constructor(\r\n        private settings: Settings,\r\n        private router: Router,\r\n        private http: AppHttpClient,\r\n        private toast: Toast,\r\n    ) {}\r\n\r\n    public addChanges(value: EditorChanges) {\r\n        this.changes$.next({...this.changes$.value, ...value});\r\n    }\r\n    \r\n    public openPanel(name: string) {\r\n        const panel = this.config.sections.find(value => {\r\n            return slugifyString(value.name) === name;\r\n        });\r\n        this.activePanel$.next(panel);\r\n        this.navigate(panel);\r\n    }\r\n\r\n    public init(iframe: HTMLIFrameElement, defaultSettings: {name: string, value: any}[], config: AppearanceEditorConfig[]) {\r\n        // listen for 'initiated' event from iframe window\r\n        fromEvent(window, 'message')\r\n            .pipe(filter((e: MessageEvent) => {\r\n                return e.data === APPEARANCE_TOKEN && (new URL(e.origin).hostname) === window.location.hostname;\r\n            })).subscribe(() => {\r\n                this.initiated$.next(true);\r\n                this.initiated$.complete();\r\n                if (this.activePanel$.value) {\r\n                    this.navigate(this.activePanel$.value);\r\n                }\r\n            });\r\n\r\n        defaultSettings.forEach(setting => {\r\n            if (setting.name === 'env') {\r\n                this.defaultSettings = {...this.defaultSettings, ...setting.value};\r\n            } else {\r\n                this.defaultSettings[setting.name] = setting.value;\r\n            }\r\n        });\r\n\r\n        this.initConfig(config);\r\n        this.initIframe(iframe);\r\n        return this.initiated$;\r\n    }\r\n\r\n    public saveChanges(changes?: EditorChanges): Observable<unknown> {\r\n        if (changes) {\r\n            this.addChanges(changes);\r\n        }\r\n        this.loading$.next(true);\r\n        const request = this.saveRequest ?\r\n            this.saveRequest :\r\n            c => this.http.post<GenericBackendResponse<any>>('admin/appearance', c);\r\n        const observable = request(this.changes$.value)\r\n            .pipe(\r\n                finalize(() => this.loading$.next(false)),\r\n                share()\r\n            );\r\n            observable.subscribe(() => {\r\n                this.changes$.next(null);\r\n                this.toast.open('Appearance saved');\r\n            });\r\n        return observable;\r\n    }\r\n\r\n    public setSaveRequest(request: (changes: EditorChanges) => Observable<void>) {\r\n        this.saveRequest = request;\r\n    }\r\n\r\n    public closeActivePanel() {\r\n        this.router.navigate(['/admin/appearance']);\r\n    }\r\n\r\n    public navigate(panelConfig: AppearanceEditorField) {\r\n        const route = panelConfig?.route || this.config.defaultRoute;\r\n        this.postMessage(new Navigate(route, panelConfig?.queryParams));\r\n    }\r\n\r\n    public setConfig(key: string, value: string|number) {\r\n        this.postMessage(new SetConfig(key, value));\r\n    }\r\n\r\n    public selectNode(selector: string, index = 0) {\r\n        if ( ! selector) return;\r\n        this.postMessage(new Select(selector, index));\r\n    }\r\n\r\n    public deselectNode() {\r\n        this.postMessage(new Deselect());\r\n    }\r\n\r\n    public postMessage(command: AppearanceCommand) {\r\n        this.previewWindow.postMessage(command, '*');\r\n    }\r\n\r\n    public currentValue(key: string) {\r\n        if (key.startsWith('env.') || key.startsWith('custom-code.')) {\r\n            return this.defaultSettings[key];\r\n        } else {\r\n            return this.settings.get(key);\r\n        }\r\n    }\r\n\r\n    private initConfig(config: AppearanceEditorConfig[]) {\r\n        const merged = deepmerge.all(config) as AppearanceEditorConfig;\r\n        merged.sections = merged.sections.sort((a, b) => (a.position > b.position) ? 1 : -1);\r\n        if ( ! merged.defaultRoute) merged.defaultRoute = '/';\r\n        this.config = merged;\r\n    }\r\n\r\n    private initIframe(iframe: HTMLIFrameElement) {\r\n        const url = this.settings.getBaseUrl() + this.config.defaultRoute + `?be-preview-mode=${APPEARANCE_TOKEN}`;\r\n        iframe.src = removeDuplicateSlashes(url);\r\n        this.previewWindow = iframe.contentWindow;\r\n    }\r\n}\r\n","export function removeDuplicateSlashes(url: string): string {\r\n    return url.replace(/([^:]\\/)\\/+/g, '$1');\r\n}\r\n","<div class=\"back-button\" (click)=\"back.emit()\">\r\n    <mat-icon svgIcon=\"keyboard-arrow-left\"></mat-icon>\r\n</div>\r\n<div class=\"title\">\r\n    <div class=\"static\" trans>Customizing</div>\r\n    <div class=\"path\">\r\n        <ng-container *ngFor=\"let item of path; last as isLast; first as isFirst;\">\r\n            <span *ngIf=\"item\">\r\n                <mat-icon svgIcon=\"keyboard-arrow-right\" class=\"separator\" *ngIf=\"!isFirst\"></mat-icon>\r\n                <span class=\"name\" [class.last]=\"isLast\" trans>{{viewName(item)}}</span>\r\n            </span>\r\n        </ng-container>\r\n    </div>\r\n</div>","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {snakeCase} from '@common/core/utils/snake-case';\r\n\r\n@Component({\r\n    selector: 'appearance-panel-meta',\r\n    templateUrl: './appearance-panel-meta.component.html',\r\n    styleUrls: ['./appearance-panel-meta.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AppearancePanelMetaComponent {\r\n    @Input() path: string[] = [];\r\n    @Output() back = new EventEmitter();\r\n\r\n    public viewName(name: string) {\r\n        return snakeCase(name).replace(/_/g , ' ');\r\n    }\r\n}\r\n","import {Directive, ElementRef, Input, OnInit} from '@angular/core';\nimport {AppearanceEditor} from '@common/admin/appearance/appearance-editor/appearance-editor.service';\n\n@Directive({\n    selector: '[highlightInPreview]'\n})\nexport class HighlightInPreviewDirective implements OnInit {\n    @Input('highlightInPreview') selector: string;\n\n    constructor(\n        private el: ElementRef<HTMLElement>,\n        private editor: AppearanceEditor,\n    ) {}\n\n    public ngOnInit(): void {\n        this.el.nativeElement.addEventListener('focus', () => {\n            this.editor.selectNode(this.selector);\n        });\n\n        this.el.nativeElement.addEventListener('blur', () => {\n            this.editor.deselectNode();\n        });\n    }\n}\n","<div class=\"field-container\" (click)=\"openModal()\">\r\n    <div class=\"label fake-label\" trans><ng-content></ng-content></div>\r\n    <div class=\"img-container\">\r\n        <image-or-icon [src]=\"image\" *ngIf=\"image$ | async as image; else noImage\"></image-or-icon>\r\n\r\n        <ng-template #noImage>\r\n            <div class=\"no-image\">\r\n                <mat-icon svgIcon=\"photo-size-select-actual\"></mat-icon>\r\n                <span class=\"text\" trans>Upload</span>\r\n            </div>\r\n        </ng-template>\r\n\r\n        <div class=\"actions-dropdown\">\r\n            <button class=\"no-style\" [matMenuTriggerFor]=\"actionsMenu\" (click)=\"$event.stopPropagation()\"><mat-icon svgIcon=\"settings\" class=\"trigger-icon\"></mat-icon></button>\r\n\r\n            <mat-menu #actionsMenu>\r\n                <div mat-menu-item (click)=\"remove()\" *ngIf=\"image$ | async\" trans>Remove</div>\r\n                <div mat-menu-item (click)=\"useDefault()\" *ngIf=\"defaultValue\" trans>Use Default</div>\r\n            </mat-menu>\r\n        </div>\r\n    </div>\r\n</div>\r\n<mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading$ | async\"></mat-progress-bar>\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {AppearanceEditor} from '@common/admin/appearance/appearance-editor/appearance-editor.service';\r\nimport {UploadQueueService} from '@common/uploads/upload-queue/upload-queue.service';\r\nimport {AppearanceImageUploadValidator} from '@common/admin/appearance/appearance-image-input/appearance-image-upload-validator';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\r\nimport {UploadInputTypes} from '@common/uploads/upload-input-config';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {randomString} from '@common/core/utils/random-string';\r\nimport {finalize} from 'rxjs/operators';\r\nimport { UploadUri } from '@common/uploads/types/upload-uri.enum';\r\nimport {UploadApiConfig} from '@common/uploads/types/upload-api-config';\r\n\r\n@Component({\r\n    selector: 'appearance-image-input',\r\n    templateUrl: './appearance-image-input.component.html',\r\n    styleUrls: ['./appearance-image-input.component.scss'],\r\n    host: {'tabindex': '0'},\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [UploadQueueService, {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: AppearanceImageInputComponent,\r\n        multi: true,\r\n    }]\r\n})\r\nexport class AppearanceImageInputComponent implements ControlValueAccessor {\r\n    @Input() defaultValue: string;\r\n    @Input() backendUri: string;\r\n    @Input() diskPrefix: string;\r\n    private propagateChange: Function;\r\n    public image$ = new BehaviorSubject(null);\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor(\r\n        private editor: AppearanceEditor,\r\n        private uploadQueue: UploadQueueService,\r\n        private validator: AppearanceImageUploadValidator,\r\n        public settings: Settings,\r\n    ) {\r\n        this.validator.showToast = true;\r\n    }\r\n\r\n    public openModal() {\r\n        const params: UploadApiConfig = {\r\n            uri: this.backendUri || UploadUri.Image,\r\n            httpParams: {diskPrefix: this.diskPrefix},\r\n            validator: this.validator,\r\n        };\r\n        openUploadWindow({types: [UploadInputTypes.image]}).then(files => {\r\n            this.loading$.next(true);\r\n            this.uploadQueue.start(files, params)\r\n                .pipe(finalize(() => this.loading$.next(false)))\r\n                .subscribe(response => {\r\n                    this.updateValue(response.fileEntry.url);\r\n                });\r\n        });\r\n    }\r\n\r\n    public remove() {\r\n        this.updateValue(null);\r\n    }\r\n\r\n    public useDefault() {\r\n        this.updateValue(this.defaultValue);\r\n    }\r\n\r\n    private updateValue(value?: string) {\r\n        this.propagateChange(value);\r\n        // make sure new image is loaded by browser as path will be the same\r\n        this.image$.next(value + `?v=${randomString(8)}`);\r\n    }\r\n\r\n    public writeValue(value: string) {\r\n        this.image$.next(value);\r\n    }\r\n\r\n    public registerOnChange(fn: Function) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    public registerOnTouched() {}\r\n}\r\n","import {ChangeDetectionStrategy, Component, ElementRef, OnDestroy} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BOTTOM_POSITION} from '@common/core/ui/overlay-panel/positions/bottom-position';\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport {BehaviorSubject, Subscription} from 'rxjs';\n\n@Component({\n    selector: 'color-picker-input',\n    templateUrl: './color-picker-input.component.html',\n    styleUrls: ['./color-picker-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: ColorPickerInputComponent,\n        multi: true,\n    }]\n})\nexport class ColorPickerInputComponent implements OnDestroy, ControlValueAccessor {\n    private pickerSub: Subscription;\n    public propagateChange: Function;\n    public color$ = new BehaviorSubject(null);\n\n    constructor(\n        private overlayPanel: OverlayPanel,\n    ) {}\n\n    public ngOnDestroy(): void {\n        this.pickerSub && this.pickerSub.unsubscribe();\n    }\n\n    public writeValue(value: string) {\n        this.color$.next(value);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n\n    public async openColorPicker(e: MouseEvent) {\n        const { BeColorPickerModule } = await import('@common/core/ui/color-picker/be-color-picker.module');\n        this.pickerSub = this.overlayPanel.open(\n            BeColorPickerModule.components.panel,\n            {\n                origin: new ElementRef(e.target),\n                position: BOTTOM_POSITION,\n                data: {color: this.color$.value}\n            }\n        ).valueChanged().subscribe(color => {\n            this.color$.next(color);\n            this.propagateChange(this.color$.value);\n        });\n    }\n}\n","<button type=\"button\" class=\"no-style color-picker-btn\" (click)=\"openColorPicker($event)\">\n    <mat-icon svgIcon=\"drop-custom\" class=\"color-icon\" [style.color]=\"color$ | async\"></mat-icon>\n    <span class=\"name\" trans><ng-content></ng-content></span>\n    <span class=\"change\" trans>Change</span>\n</button>","<appearance-panel-meta [path]=\"path$ | async\" (back)=\"openPreviousPanel()\"></appearance-panel-meta>\r\n\r\n<div class=\"appearance-panel-content\">\r\n    <ng-container *ngIf=\"selectedSubpanel$ | async as selectedSubpanel; else mainPanel\">\r\n        <div [ngSwitch]=\"selectedSubpanel\">\r\n            <ng-container *ngSwitchCase=\"'primaryFeatures'\">\r\n                <div *ngFor=\"let group of primaryArray().controls; index as index\" [formGroup]=\"group\"\r\n                     class=\"many-inputs feature-group\">\r\n                    <div class=\"feature-group-header\">\r\n                        <div class=\"text\">{{'Feature' | trans}} #{{index + 1}}</div>\r\n                        <button mat-icon-button color=\"warn\" (click)=\"removeFeature('primary', index)\">\r\n                            <mat-icon svgIcon=\"close\"></mat-icon>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"input-container\">\r\n                        <label [for]=\"'primary.' + index + '.title'\" trans>Title</label>\r\n                        <input type=\"text\" [id]=\"'primary.' + index + '.title'\" formControlName=\"title\"\r\n                               [placeholder]=\"defaultValue('primaryFeatures.' + index + '.title')\"\r\n                               highlightInPreview=\".inline-feature:nth-child({{index + 1}}) h3\" required>\r\n                    </div>\r\n                    <div class=\"input-container\">\r\n                        <label [for]=\"'primary.' + index + '.subtitle'\" trans>Subtitle</label>\r\n                        <textarea [id]=\"'primary.' + index + '.subtitle'\" formControlName=\"subtitle\"\r\n                               [placeholder]=\"defaultValue('primaryFeatures.' + index + '.subtitle')\"\r\n                                  highlightInPreview=\".inline-feature:nth-child({{index + 1}}) p\" rows=\"3\" required></textarea>\r\n                    </div>\r\n                    <appearance-image-input [defaultValue]=\"defaultValue('primaryFeatures.' + index + '.image')\"\r\n                                            formControlName=\"image\"\r\n                                            diskPrefix=\"homepage\"\r\n                                            highlightInPreview=\".inline-feature:nth-child({{index + 1}}) img\" trans>\r\n                        Image\r\n                    </appearance-image-input>\r\n                </div>\r\n                <button mat-flat-button color=\"accent\" *ngIf=\"primaryArray().length < 3\" (click)=\"addFeature('primary')\" trans>Add</button>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"'secondaryFeatures'\">\r\n                <div *ngFor=\"let group of secondaryArray().controls; index as index\" [formGroup]=\"group\"\r\n                     class=\"many-inputs feature-group\">\r\n                    <div class=\"feature-group-header\">\r\n                        <div class=\"text\">{{'Feature' | trans}} #{{index + 1}}</div>\r\n                        <button mat-icon-button color=\"warn\" (click)=\"removeFeature('secondary', index)\">\r\n                            <mat-icon svgIcon=\"close\"></mat-icon>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"input-container\">\r\n                        <label [for]=\"'secondary.' + index + '.title'\" trans>Title</label>\r\n                        <input type=\"text\" [id]=\"'secondary.' + index + '.title'\" formControlName=\"title\"\r\n                               [placeholder]=\"defaultValue('secondaryFeatures.' + index + '.title')\"\r\n                               highlightInPreview=\".big-feature:nth-child({{index + 1}}) h2\" required>\r\n                    </div>\r\n                    <div class=\"input-container\">\r\n                        <label [for]=\"'secondary.' + index + '.subtitle'\" trans>Subtitle</label>\r\n                        <input type=\"text\" [id]=\"'secondary.' + index + '.subtitle'\" formControlName=\"subtitle\"\r\n                               [placeholder]=\"defaultValue('secondaryFeatures.' + index + '.subtitle')\"\r\n                               highlightInPreview=\".big-feature:nth-child({{index + 1}}) small\" required>\r\n                    </div>\r\n                    <div class=\"input-container\">\r\n                        <label [for]=\"'secondary.' + index + '.description'\" trans>Description</label>\r\n                        <textarea type=\"text\" [id]=\"'secondary.' + index + '.description'\" formControlName=\"description\"\r\n                                  rows=\"4\" [placeholder]=\"defaultValue('secondaryFeatures.' + index + '.description')\"\r\n                                  highlightInPreview=\".big-feature:nth-child({{index + 1}}) p\"\r\n                                  required></textarea>\r\n                    </div>\r\n                    <appearance-image-input [defaultValue]=\"defaultValue('secondaryFeatures.' + index + '.image')\"\r\n                                            highlightInPreview=\".big-feature:nth-child({{index + 1}}) img\"\r\n                                            diskPrefix=\"homepage\"\r\n                                            formControlName=\"image\" trans>Image\r\n                    </appearance-image-input>\r\n                </div>\r\n                <button mat-flat-button color=\"accent\" (click)=\"addFeature('secondary')\" trans>Add</button>\r\n            </ng-container>\r\n            <div *ngSwitchCase=\"'actions'\" class=\"many-inputs\" [formGroup]=\"form.get('actions')\">\r\n                <div class=\"input-container\">\r\n                    <label for=\"home.actions.cta1\" trans>Call to Action #1</label>\r\n                    <input type=\"text\" id=\"home.actions.cta1\" formControlName=\"cta1\"\r\n                           highlightInPreview=\".get-started-button\"\r\n                           [placeholder]=\"defaultValue('actions.cta1')\" required>\r\n                </div>\r\n                <div class=\"input-container\">\r\n                    <label for=\"home.actions.cta2\" trans>Call to Action #2</label>\r\n                    <input type=\"text\" id=\"home.actions.cta2\" formControlName=\"cta2\"\r\n                           highlightInPreview=\".learn-more-button\"\r\n                           [placeholder]=\"defaultValue('actions.cta2')\" required>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <ng-template #mainPanel>\r\n        <div [formGroup]=\"form\" class=\"many-inputs\">\r\n            <div class=\"input-container\">\r\n                <label for=\"home.header.title\" trans>Header Title</label>\r\n                <input type=\"text\" id=\"home.header.title\" formControlName=\"headerTitle\"\r\n                       [placeholder]=\"defaultValue('headerTitle')\" highlightInPreview=\".header-title\" required>\r\n            </div>\r\n            <div class=\"input-container\">\r\n                <label for=\"home.header.subtitle\" trans>Header Subtitle</label>\r\n                <textarea type=\"text\" id=\"home.header.subtitle\" formControlName=\"headerSubtitle\" rows=\"4\"\r\n                          [placeholder]=\"defaultValue('headerSubtitle')\" highlightInPreview=\".header-description\"\r\n                          required></textarea>\r\n            </div>\r\n\r\n            <appearance-image-input [defaultValue]=\"defaultValue('headerImage')\"\r\n                                    highlightInPreview=\".hero\"\r\n                                    diskPrefix=\"homepage\"\r\n                                    formControlName=\"headerImage\" trans>Header Image\r\n            </appearance-image-input>\r\n\r\n            <mat-slider min=\"0\" max=\"1\" step=\"0.1\" formControlName=\"headerImageOpacity\" class=\"opacity-slider\"></mat-slider>\r\n\r\n            <color-picker-input formControlName=\"headerOverlayColor1\" trans>Header Overlay Color 1</color-picker-input>\r\n            <color-picker-input formControlName=\"headerOverlayColor2\" trans>Header Overlay Color 2</color-picker-input>\r\n\r\n            <div class=\"separator\"></div>\r\n\r\n            <ul class=\"unstyled-list\">\r\n                <li (click)=\"openSubpanel('actions')\" class=\"nav-item\">\r\n                    <span class=\"text\" trans>Action Buttons</span>\r\n                    <mat-icon class=\"actions\" svgIcon=\"keyboard-arrow-right\"></mat-icon>\r\n                </li>\r\n                <li (click)=\"openSubpanel('primaryFeatures')\" class=\"nav-item\">\r\n                    <span class=\"text\" trans>Primary Features</span>\r\n                    <mat-icon class=\"actions\" svgIcon=\"keyboard-arrow-right\"></mat-icon>\r\n                </li>\r\n                <li (click)=\"openSubpanel('secondaryFeatures')\" class=\"nav-item\">\r\n                    <span class=\"text\" trans>Secondary Features</span>\r\n                    <mat-icon class=\"actions\" svgIcon=\"keyboard-arrow-right\"></mat-icon>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"separator\"></div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"home.footer.title\" trans>Footer Title</label>\r\n                <input type=\"text\" id=\"home.footer.title\" formControlName=\"footerTitle\"\r\n                       [placeholder]=\"defaultValue('footerTitle')\" highlightInPreview=\".footer-title\" required>\r\n            </div>\r\n            <div class=\"input-container\">\r\n                <label for=\"home.footer.subtitle\" trans>Footer Subtitle</label>\r\n                <textarea type=\"text\" id=\"home.footer.subtitle\" formControlName=\"footerSubtitle\" rows=\"4\"\r\n                          [placeholder]=\"defaultValue('footerSubtitle')\" highlightInPreview=\".footer-description\"\r\n                          required></textarea>\r\n            </div>\r\n            <appearance-image-input [defaultValue]=\"defaultValue('footerImage')\"\r\n                                    highlightInPreview=\".bottom-cta\"\r\n                                    diskPrefix=\"homepage\"\r\n                                    formControlName=\"footerImage\" trans>Footer Image\r\n            </appearance-image-input>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {FormArray, FormBuilder} from '@angular/forms';\nimport {AppearanceEditor} from '@common/admin/appearance/appearance-editor/appearance-editor.service';\nimport {Settings} from '@common/core/config/settings.service';\nimport {map} from 'rxjs/operators';\nimport * as Dot from 'dot-object';\nimport {HomepageContent} from '../../../dashboard/landing/homepage-content';\n\nconst CONFIG_KEY = 'homepage.appearance';\n\n@Component({\n    selector: 'homepage-appearance-panel',\n    templateUrl: './homepage-appearance-panel.component.html',\n    styleUrls: ['./homepage-appearance-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HomepageAppearancePanelComponent implements OnInit {\n    public selectedSubpanel$ = new BehaviorSubject<string>(null);\n    public defaultValues: HomepageContent;\n\n    public path$ = this.selectedSubpanel$.pipe(map(panel => {\n        const path = ['Homepage'];\n        if (panel) path.push(panel);\n        return path;\n    }));\n\n    public form = this.fb.group({\n        headerTitle: [''],\n        headerSubtitle: [''],\n        headerImage: [''],\n        headerImageOpacity: [1],\n        headerOverlayColor1: [''],\n        headerOverlayColor2: [''],\n        footerTitle: [''],\n        footerSubtitle: [''],\n        footerImage: [''],\n        actions: this.fb.group({\n            inputText: [''],\n            inputButton: [''],\n            cta1: [''],\n            cta2: [''],\n        }),\n        primaryFeatures: this.fb.array([]),\n        secondaryFeatures: this.fb.array([]),\n        channelIds: this.fb.control([]),\n    });\n\n    constructor(\n        private fb: FormBuilder,\n        private editor: AppearanceEditor,\n        private settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        const data = this.settings.getJson(CONFIG_KEY, {}) as HomepageContent;\n        this.defaultValues = this.editor.defaultSettings[CONFIG_KEY] ? JSON.parse(this.editor.defaultSettings[CONFIG_KEY]) : {};\n\n        (data.primaryFeatures || []).forEach(() => {\n            this.addFeature('primary');\n        });\n        (data.secondaryFeatures || []).forEach(() => {\n            this.addFeature('secondary');\n        });\n\n        this.form.patchValue(data);\n\n        this.form.valueChanges.subscribe(value => {\n            this.editor.setConfig(CONFIG_KEY, value);\n            this.editor.addChanges({[CONFIG_KEY]: value});\n        });\n    }\n\n    public openPreviousPanel() {\n        if (this.selectedSubpanel$.value) {\n            this.openSubpanel(null);\n        } else {\n            this.editor.closeActivePanel();\n        }\n    }\n\n    public openSubpanel(name: string) {\n        this.selectedSubpanel$.next(name);\n    }\n\n    public addFeature(type: 'primary'|'secondary') {\n        const features = this.form.get(`${type}Features`) as FormArray;\n        const data: {[key: string]: string[]} = {title: [''], subtitle: [''], image: ['']};\n        if (type === 'secondary') {\n            data.description = [''];\n        }\n        features.push(this.fb.group(data));\n    }\n\n    public removeFeature(type: 'primary'|'secondary', index: number) {\n        const features = this.form.get(`${type}Features`) as FormArray;\n        features.removeAt(index);\n    }\n\n    public defaultValue(key: string): string {\n        return Dot.pick(key, this.defaultValues) || '';\n    }\n\n    public primaryArray() {\n        return this.form.get('primaryFeatures') as FormArray;\n    }\n\n    public secondaryArray() {\n        return this.form.get('secondaryFeatures') as FormArray;\n    }\n}\n","import {HomepageAppearancePanelComponent} from './homepage-appearance-panel/homepage-appearance-panel.component';\r\nimport {AppearanceEditorConfig} from '../../../common/admin/appearance/appearance-editor-config.token';\r\n\r\nexport const APP_APPEARANCE_CONFIG: AppearanceEditorConfig = {\r\n    defaultRoute: 'dashboard',\r\n    navigationRoutes: [\r\n        'dashboard',\r\n        'dashboard/projects/new',\r\n        'builder',\r\n        'account/settings',\r\n        'admin',\r\n    ],\r\n    menus: {\r\n        availableRoutes: [\r\n            'dashboard',\r\n            'dashboard/projects/new',\r\n        ],\r\n        positions: [\r\n            'dashboard',\r\n            'footer',\r\n        ]\r\n    },\r\n    sections: [\r\n        {\r\n            name: 'landing page',\r\n            component: HomepageAppearancePanelComponent,\r\n            position: 1,\r\n            route: '/',\r\n        }\r\n    ]\r\n};\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ColorPickerInputComponent} from '@common/core/ui/color-picker/color-picker-input/color-picker-input.component';\nimport {TranslationsModule} from '@common/core/translations/translations.module';\nimport {MatIconModule} from '@angular/material/icon';\n\n\n@NgModule({\n    declarations: [\n        ColorPickerInputComponent,\n    ],\n    imports: [\n        CommonModule,\n        TranslationsModule,\n        MatIconModule,\n    ],\n    exports: [\n        ColorPickerInputComponent,\n    ]\n})\nexport class ColorPickerInputModule {\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {AppearanceEditor} from '@common/admin/appearance/appearance-editor/appearance-editor.service';\n\n@Component({\n    selector: 'general-appearance-panel',\n    templateUrl: './general-appearance-panel.component.html',\n    styleUrls: ['./general-appearance-panel.component.scss'],\n    host: {'class': 'appearance-panel'},\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GeneralAppearancePanelComponent implements OnInit {\n    public form = this.fb.group({\n        'branding.logo_light': [''],\n        'branding.logo_dark': [''],\n        'branding.favicon': [''],\n        'env.app_name': [''],\n        'branding.site_description': [''],\n    });\n\n    constructor(\n        private fb: FormBuilder,\n        public editor: AppearanceEditor,\n    ) {}\n\n    ngOnInit() {\n        const defaults = {};\n        Object.keys(this.form.controls).forEach(key => {\n          defaults[key] = this.editor.currentValue(key);\n        });\n        this.form.patchValue(defaults);\n\n        this.form.valueChanges.subscribe(value => {\n            this.editor.addChanges(value);\n        });\n    }\n\n    public defaultValue(key: string) {\n        return this.editor.defaultSettings[key];\n    }\n}\n","<appearance-panel-meta [path]=\"['General']\" (back)=\"editor.closeActivePanel()\"></appearance-panel-meta>\n\n<div [formGroup]=\"form\" class=\"appearance-panel-content many-inputs\">\n    <appearance-image-input [defaultValue]=\"defaultValue('branding.logo_light')\" formControlName=\"branding.logo_light\" diskPrefix=\"branding_media\" highlightInPreview=\".logo\">\n        Logo #1 (For top navbar)\n    </appearance-image-input>\n\n    <appearance-image-input [defaultValue]=\"defaultValue('branding.logo_dark')\" formControlName=\"branding.logo_dark\" diskPrefix=\"branding_media\" highlightInPreview=\".logo\">\n        Logo #2 (Everywhere else)\n    </appearance-image-input>\n\n    <appearance-image-input [defaultValue]=\"defaultValue('branding.favicon')\" backendUri=\"uploads/favicon\" diskPrefix=\"branding_media\" formControlName=\"branding.favicon\">\n        Favicon\n    </appearance-image-input>\n\n    <div class=\"input-container\">\n        <label for=\"env.app_name\" trans>Site Name</label>\n        <input type=\"text\" id=\"env.app_name\" [placeholder]=\"defaultValue('env.app_name')\" formControlName=\"env.app_name\">\n    </div>\n\n    <div class=\"input-container\">\n        <label for=\"branding.site_description\" trans>Site Description</label>\n        <textarea id=\"branding.site_description\" [placeholder]=\"defaultValue('branding.site_description')\" rows=\"4\" formControlName=\"branding.site_description\"></textarea>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {CssTheme} from '@common/core/types/models/CssTheme';\nimport {PaginatedBackendResponse} from '@common/core/types/pagination/paginated-backend-response';\n\nconst BASE_URI = 'css-theme';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CssThemeService {\n    constructor(private http: AppHttpClient) {}\n\n    public all(): PaginatedBackendResponse<CssTheme> {\n        return this.http.get(BASE_URI);\n    }\n\n    public create(params: Partial<CssTheme>): BackendResponse<{ theme: CssTheme }> {\n        return this.http.post(BASE_URI, params);\n    }\n\n    public update(id, params: Partial<CssTheme>): BackendResponse<{ theme: CssTheme }> {\n        return this.http.put(`${BASE_URI}/${id}`, params);\n    }\n\n    public delete(ids: number[]): BackendResponse<void> {\n        return this.http.delete(`${BASE_URI}/${ids}`);\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title>\n        <span *ngIf=\"data.theme\" trans>Update Theme</span>\n        <span *ngIf=\"!data.theme\" trans>Create Theme</span>\n    </h2>\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form (ngSubmit)=\"confirm()\" ngNativeValidate [formGroup]=\"form\" *ngIf=\"errors$ | async as errors\">\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <label for=\"name\" trans>Name</label>\n            <input type=\"text\" id=\"name\" formControlName=\"name\" required minlength=\"3\">\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n\n        <div class=\"setting-toggle-container\">\n            <mat-slide-toggle id=\"is_dark\" formControlName=\"is_dark\" trans>Dark Theme</mat-slide-toggle>\n            <p trans>Whether this theme has light text on dark background.</p>\n        </div>\n\n        <div class=\"setting-toggle-container\">\n            <mat-slide-toggle id=\"default_dark\" formControlName=\"default_dark\" trans>Default Dark Theme</mat-slide-toggle>\n            <p trans>Whether this theme should be used as default dark theme.</p>\n        </div>\n\n        <div class=\"setting-toggle-container\">\n            <mat-slide-toggle id=\"default_light\" formControlName=\"default_light\" trans>Default Light Theme</mat-slide-toggle>\n            <p trans>Whether this theme should be used as default light theme.</p>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\" trans>\n            <span *ngIf=\"data.theme; else creating\">Update</span>\n            <ng-template #creating>\n                <span>Create</span>\n            </ng-template>\n        </button>\n    </mat-dialog-actions>\n</form>\n\n\n","import {ChangeDetectionStrategy, Component, Inject} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {FormBuilder} from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {CssTheme} from '@common/core/types/models/CssTheme';\nimport {CssThemeService} from '@common/admin/appearance/panels/themes-appearance-panel/css-theme.service';\nimport {filter} from 'rxjs/operators';\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\n\ninterface CrupdateCssThemeModalData {\n    theme: CssTheme;\n}\n\n@Component({\n    selector: 'crupdate-css-theme-modal',\n    templateUrl: './crupdate-css-theme-modal.component.html',\n    styleUrls: ['./crupdate-css-theme-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CrupdateCssThemeModalComponent {\n    public loading$ = new BehaviorSubject(false);\n    public errors$ = new BehaviorSubject<{[K in keyof Partial<CssTheme>]: string}>({});\n    public form = this.fb.group({\n        name: [''],\n        is_dark: [false],\n        default_dark: [false],\n        default_light: [false],\n    });\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdateCssThemeModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateCssThemeModalData,\n        private cssTheme: CssThemeService,\n        private toast: Toast,\n        private fb: FormBuilder,\n    ) {\n        if (data.theme) {\n            this.form.patchValue(data.theme);\n        }\n\n        // make sure \"default_light\" and \"default_dark\"\n        // can't be toggled on at the same time\n        this.form.get('default_dark')\n            .valueChanges\n            .pipe(filter(value => !!value))\n            .subscribe(() => {\n                this.form.get('default_light').setValue(false);\n            });\n        this.form.get('default_light')\n            .valueChanges\n            .pipe(filter(value => !!value))\n            .subscribe(() => {\n                this.form.get('default_dark').setValue(false);\n            });\n    }\n\n    public confirm() {\n        const request = this.data.theme ?\n            this.cssTheme.update(this.data.theme.id, this.form.value) :\n            this.cssTheme.create(this.form.value);\n        request.subscribe(response => {\n            this.toast.open(this.data.theme ? 'Theme updated' : 'Theme created');\n            this.close(response.theme);\n        }, (errResponse: BackendErrorResponse) => this.errors$.next(errResponse.errors));\n    }\n\n    public close(theme?: CssTheme) {\n        this.dialogRef.close(theme);\n    }\n}\n","<ul class=\"unstyled-list\" [formGroup]=\"form\">\n    <li *ngFor=\"let color of theme.colors | keyvalue\">\n        <color-picker-input [formControlName]=\"color.key\" trans>{{viewName(color.key)}}</color-picker-input>\n    </li>\n</ul>\n","import {ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {CssTheme, CssThemeColors} from '@common/core/types/models/CssTheme';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {SetColors} from '@common/shared/appearance/commands/appearance-commands';\nimport {AppearanceEditor, EditorChanges} from '@common/admin/appearance/appearance-editor/appearance-editor.service';\nimport {CssThemeService} from '@common/admin/appearance/panels/themes-appearance-panel/css-theme.service';\n\n@Component({\n    selector: 'css-theme-colors-panel',\n    templateUrl: './css-theme-colors-panel.component.html',\n    styleUrls: ['./css-theme-colors-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CssThemeColorsPanelComponent implements OnInit, OnDestroy {\n    @Input() theme: CssTheme;\n    public form = new FormGroup({});\n    private colorCache: CssThemeColors = {};\n\n    constructor(\n        private editor: AppearanceEditor,\n        private themes: CssThemeService,\n    ) {}\n\n    ngOnInit() {\n        this.editor.setSaveRequest(this.saveColors.bind(this));\n\n        // build form\n        Object.entries(this.theme.colors).forEach(([name, color]) => {\n            this.form.addControl(name, new FormControl(color));\n        });\n\n        this.editor.initiated$.subscribe(() => {\n            this.setColors(this.theme.colors);\n            this.form.valueChanges.subscribe((value: CssThemeColors) => {\n                this.setColors(value);\n                this.editor.addChanges({'colors': value});\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.editor.setSaveRequest(null);\n    }\n\n    private saveColors(payload: EditorChanges) {\n        return this.themes.update(this.theme.id, payload);\n    }\n\n    private setColors(colors: CssThemeColors) {\n        Object.entries(colors).forEach(([name, color]) => {\n            // make sure we only set colors that actually changed\n            // to keep performance as good as possible\n            if (this.colorCache[name] !== color) {\n                this.editor.postMessage(new SetColors(name, color));\n                this.colorCache[name] = color;\n            }\n        });\n    }\n\n    public viewName(name: string) {\n        return name.replace('be-', '').replace(/-/g, ' ');\n    }\n}\n","<appearance-panel-meta [path]=\"path$ | async\" (back)=\"openPreviousPanel()\"></appearance-panel-meta>\r\n\r\n<div class=\"appearance-panel-content\">\r\n    <css-theme-colors-panel\r\n            [theme]=\"selectedTheme\"\r\n            *ngIf=\"selectedTheme$ | async as selectedTheme else themesList\"\r\n    ></css-theme-colors-panel>\r\n\r\n    <ng-template #themesList>\r\n        <button mat-raised-button color=\"accent\" type=\"button\" class=\"new-theme-button\" (click)=\"openCrupdateThemeModal()\" trans>New Theme</button>\r\n        <ul class=\"unstyled-list\">\r\n            <li class=\"nav-item\" *ngFor=\"let theme of loadedThemes$ | async\" (click)=\"setSelectedTheme(theme)\">\r\n                <div class=\"name\">{{theme.name}}</div>\r\n                <div class=\"actions\" (click)=\"$event.stopPropagation()\">\r\n                    <button mat-icon-button type=\"button\" (click)=\"setSelectedTheme(theme)\">\r\n                        <mat-icon svgIcon=\"drop-custom\"></mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button type=\"button\" (click)=\"openCrupdateThemeModal(theme);\">\r\n                        <mat-icon svgIcon=\"edit\"></mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button type=\"button\" (click)=\"maybeDeleteThemeModal(theme)\">\r\n                        <mat-icon svgIcon=\"delete\"></mat-icon>\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </ng-template>\r\n</div>\r\n\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay overlay-partial\"></loading-indicator>\r\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit} from '@angular/core';\nimport {AppearanceEditor} from '@common/admin/appearance/appearance-editor/appearance-editor.service';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {CrupdateCssThemeModalComponent} from '@common/admin/appearance/panels/themes-appearance-panel/crupdate-css-theme-modal/crupdate-css-theme-modal.component';\nimport {CssTheme} from '@common/core/types/models/CssTheme';\nimport {CssThemeService} from '@common/admin/appearance/panels/themes-appearance-panel/css-theme.service';\nimport {BehaviorSubject, Subscription} from 'rxjs';\nimport {finalize, map} from 'rxjs/operators';\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n    selector: 'themes-appearance-panel',\n    templateUrl: './themes-appearance-panel.component.html',\n    styleUrls: ['./themes-appearance-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ThemesAppearancePanelComponent implements OnInit, OnDestroy {\n    public loading$ = new BehaviorSubject<boolean>(false);\n    public loadedThemes$ = new BehaviorSubject<CssTheme[]>([]);\n    public selectedTheme$ = new BehaviorSubject<CssTheme>(null);\n    private querySub: Subscription;\n\n    public path$ = this.selectedTheme$.pipe(map(theme => {\n        const path = ['Themes'];\n        if (theme) path.push(theme.name);\n        return path;\n    }));\n\n    constructor(\n        public appearance: AppearanceEditor,\n        private modal: Modal,\n        private themes: CssThemeService,\n        private toast: Toast,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) {}\n\n    ngOnInit() {\n        this.reloadThemes();\n    }\n\n    ngOnDestroy() {\n        this.querySub && this.querySub.unsubscribe();\n    }\n\n    public openCrupdateThemeModal(theme?: CssTheme) {\n        this.modal.open(CrupdateCssThemeModalComponent, {theme})\n            .afterClosed()\n            .subscribe(newTheme => {\n                if (newTheme) {\n                    this.reloadThemes();\n                }\n            });\n    }\n\n    public setSelectedTheme(theme?: CssTheme) {\n        this.router.navigate([], {queryParams: {theme: theme && theme.id}, queryParamsHandling: 'merge'});\n    }\n\n    public openPreviousPanel() {\n        if (this.selectedTheme$.value) {\n            this.setSelectedTheme();\n        } else {\n            this.appearance.closeActivePanel();\n        }\n    }\n\n    public maybeDeleteThemeModal(theme: CssTheme) {\n        this.modal.show(ConfirmModalComponent, {\n            title: 'Delete Theme',\n            body:  'Are you sure you want to delete this theme?',\n            ok:    'Delete'\n        }).afterClosed().subscribe(confirmed => {\n            if ( ! confirmed) return;\n            this.deleteTheme(theme);\n        });\n    }\n\n    private reloadThemes() {\n        this.loading$.next(true);\n        this.themes.all()\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.loadedThemes$.next(response.pagination.data);\n                this.bindToQueryParams();\n            });\n    }\n\n    private deleteTheme(theme: CssTheme) {\n        this.themes.delete([theme.id]).subscribe(() => {\n            this.toast.open('Theme deleted');\n            this.reloadThemes();\n        });\n    }\n\n    private bindToQueryParams() {\n        if (this.querySub) return;\n        this.querySub = this.route.queryParams.subscribe((params: {theme?: string}) => {\n            const theme = this.loadedThemes$.value.find(t => t.id === +params.theme);\n            this.selectedTheme$.next(theme);\n        });\n    }\n}\n","export class MenuItem {\r\n    id: number|string;\r\n    label: string;\r\n    action: string;\r\n\r\n    // ID for model if action matches to specific model. If action\r\n    // points to a specific custom page, model_id will be that page's ID.\r\n    model_id: number;\r\n    type: 'page' | 'link' | 'route' = 'link';\r\n    order = 1;\r\n    icon: string;\r\n    condition: MenuItemCondition = null;\r\n    target: string = null;\r\n    position = 0;\r\n    activeExact = false;\r\n\r\n    constructor(params: Partial<MenuItem> = {}) {\r\n        for (const name in params) {\r\n            this[name] = params[name];\r\n        }\r\n        this.id = Math.floor(Math.random() * (1000 - 1));\r\n    }\r\n}\r\n\r\nexport type MenuItemCondition = string|string[]|Function;\r\n","import {Injectable} from '@angular/core';\r\nimport {moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {Menu} from '@common/core/ui/custom-menu/menu';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {AppearanceEditor} from '@common/admin/appearance/appearance-editor/appearance-editor.service';\r\nimport {MenuItem} from '@common/core/ui/custom-menu/menu-item';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MenuEditor {\r\n    public allMenus$ = new BehaviorSubject< Menu[]>([]);\r\n    public activeMenu$ = new BehaviorSubject<Menu>(null);\r\n\r\n    constructor(\r\n        private settings: Settings,\r\n        private appearance: AppearanceEditor,\r\n    ) {}\r\n\r\n    public create() {\r\n        const allMenus = [...this.allMenus$.value];\r\n        this.activeMenu$.next(new Menu({name: 'New Menu'}));\r\n        allMenus.push(this.activeMenu$.value);\r\n        this.allMenus$.next(allMenus);\r\n        this.commitChanges();\r\n    }\r\n\r\n    public reorderActiveMenuItems(previousIndex: number, currentIndex: number) {\r\n        const activeMenu = {...this.activeMenu$.value};\r\n        moveItemInArray(activeMenu.items, previousIndex, currentIndex);\r\n        this.activeMenu$.next(activeMenu);\r\n        this.commitChanges();\r\n    }\r\n\r\n    public deleteActive() {\r\n        const allMenus = [...this.allMenus$.value];\r\n        const i = allMenus.indexOf(this.activeMenu$.value);\r\n        allMenus.splice(i, 1);\r\n        this.activeMenu$.next(null);\r\n        this.allMenus$.next(allMenus);\r\n        this.commitChanges();\r\n    }\r\n\r\n    public addItem(item: MenuItem) {\r\n        const activeMenu = {...this.activeMenu$.value};\r\n        item = this.transformLocalLinksToRoutes(item);\r\n        activeMenu.items.push(item);\r\n        this.activeMenu$.next(activeMenu);\r\n        this.commitChanges();\r\n    }\r\n\r\n    public removeItem(item: MenuItem) {\r\n        const activeMenu = {...this.activeMenu$.value};\r\n        const i = this.activeMenu$.value.items.indexOf(item);\r\n        activeMenu.items.splice(i, 1);\r\n        this.activeMenu$.next(activeMenu);\r\n        this.commitChanges();\r\n    }\r\n\r\n    private transformLocalLinksToRoutes(item: MenuItem): MenuItem {\r\n        const baseUrl = this.settings.getBaseUrl();\r\n\r\n        if (item.type !== 'link' || item.action.indexOf(baseUrl) === -1) return item;\r\n\r\n        item.type = 'route';\r\n        item.action = item.action.replace(this.settings.getBaseUrl(), '');\r\n        return item;\r\n    }\r\n\r\n    public commitChanges() {\r\n        const menus = JSON.stringify(this.allMenus$.value);\r\n        this.appearance.setConfig('menus', menus);\r\n        this.appearance.addChanges({'menus': menus});\r\n    }\r\n\r\n    public setFromJson(json: string) {\r\n        if ( ! json) return;\r\n        const menus = JSON.parse(json);\r\n\r\n        if ( ! menus) return;\r\n\r\n        const allMenus = menus.map(menuData => {\r\n            const menu = new Menu(menuData);\r\n            menu.items = menu.items.map(item => new MenuItem(item));\r\n            return menu;\r\n        });\r\n        this.allMenus$.next(allMenus);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {MenuItemCategory} from '@common/admin/appearance/panels/menus-appearance-panel/menus/item-categories/menu-item-category';\nimport {HttpCacheClient} from '@common/core/http/http-cache-client';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MenuItemCategoriesService {\n    constructor(private http: HttpCacheClient) {}\n\n    public get(): BackendResponse<{categories: MenuItemCategory[]}> {\n        return this.http.getWithCache('admin/appearance/menu-categories');\n    }\n}\n","<div class=\"header\">\r\n    <span class=\"title\" trans>New Menu Item</span>\r\n    <mat-icon svgIcon=\"close\" (click)=\"close()\"></mat-icon>\r\n</div>\r\n<div class=\"new-item-tabs\">\r\n    <mat-accordion>\r\n        <form (ngSubmit)=\"addLinkMenuItem()\" [formGroup]=\"linkForm\" ngNativeValidate>\r\n            <mat-expansion-panel class=\"mat-elevation-z\">\r\n                <mat-expansion-panel-header><mat-panel-title trans>Link</mat-panel-title></mat-expansion-panel-header>\r\n                <div class=\"many-inputs expansion-panel-content\">\r\n                    <div class=\"input-container\">\r\n                        <label for=\"external-link-url\" trans>URL</label>\r\n                        <input type=\"url\" id=\"external-link-url\" formControlName=\"action\" required>\r\n                    </div>\r\n                    <div class=\"input-container\">\r\n                        <label for=\"external-link-text\" trans>Link Text</label>\r\n                        <input type=\"text\" id=\"external-link-text\" formControlName=\"label\" required>\r\n                    </div>\r\n                </div>\r\n                <mat-action-row>\r\n                    <button mat-button color=\"accent\" type=\"submit\" trans>Add</button>\r\n                </mat-action-row>\r\n            </mat-expansion-panel>\r\n        </form>\r\n        <mat-expansion-panel class=\"mat-elevation-z\">\r\n            <mat-expansion-panel-header><mat-panel-title trans>Route</mat-panel-title></mat-expansion-panel-header>\r\n            <div class=\"items-list expansion-panel-content\">\r\n                <div class=\"item\" *ngFor=\"let route of appearance.config.menus.availableRoutes\"\r\n                     (click)=\"addRouteMenuItem(route)\">{{route}}\r\n                </div>\r\n            </div>\r\n        </mat-expansion-panel>\r\n        <mat-expansion-panel class=\"mat-elevation-z\" *ngFor=\"let category of menuItemCategories\">\r\n            <mat-expansion-panel-header><mat-panel-title trans>{{category.name}}</mat-panel-title></mat-expansion-panel-header>\r\n            <div class=\"items-list expansion-panel-content\">\r\n                <div class=\"item\" *ngFor=\"let item of category.items\" (click)=\"addCustomMenuItem(item)\">{{item.label}}</div>\r\n            </div>\r\n        </mat-expansion-panel>\r\n    </mat-accordion>\r\n</div>","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {OverlayPanelRef} from '@common/core/ui/overlay-panel/overlay-panel-ref';\r\nimport {MenuEditor} from '@common/admin/appearance/panels/menus-appearance-panel/menus/menu-editor.service';\r\nimport {AppearanceEditor} from '@common/admin/appearance/appearance-editor/appearance-editor.service';\r\nimport {MenuItem} from '@common/core/ui/custom-menu/menu-item';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {MenuItemCategory} from '@common/admin/appearance/panels/menus-appearance-panel/menus/item-categories/menu-item-category';\r\nimport {MenuItemCategoriesService} from '@common/admin/appearance/panels/menus-appearance-panel/menus/item-categories/menu-item-categories.service';\r\n\r\n@Component({\r\n    selector: 'add-menu-item-panel',\r\n    templateUrl: './add-menu-item-panel.component.html',\r\n    styleUrls: ['./add-menu-item-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddMenuItemPanelComponent implements OnInit {\r\n    public linkForm = this.fb.group({\r\n        action: [''],\r\n        label: [''],\r\n    });\r\n    public menuItemCategories: MenuItemCategory[];\r\n\r\n    constructor(\r\n        public editor: MenuEditor,\r\n        public appearance: AppearanceEditor,\r\n        private overlayPanelRef: OverlayPanelRef,\r\n        private fb: FormBuilder,\r\n        private itemCategories: MenuItemCategoriesService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.itemCategories.get().subscribe(response => {\r\n            this.menuItemCategories = response.categories;\r\n        });\r\n    }\r\n\r\n    public addLinkMenuItem() {\r\n        this.editor.addItem(new MenuItem({\r\n            type: 'link',\r\n            label: this.linkForm.value.label,\r\n            action: this.linkForm.value.action,\r\n        }));\r\n\r\n        this.linkForm.reset();\r\n        this.close();\r\n    }\r\n\r\n    public addRouteMenuItem(route: string) {\r\n        this.editor.addItem(new MenuItem({\r\n            type: 'route',\r\n            label: route,\r\n            action: route,\r\n        }));\r\n        this.close();\r\n    }\r\n\r\n    public addCustomMenuItem(item: Partial<MenuItem>) {\r\n        this.editor.addItem(new MenuItem(item));\r\n        this.close();\r\n    }\r\n\r\n    public close() {\r\n        this.overlayPanelRef.close();\r\n    }\r\n}\r\n","<button mat-icon-button (click)=\"selectIcon(icon)\" *ngFor=\"let icon of icons$ | async\">\n  <mat-icon [svgIcon]=\"icon\"></mat-icon>\n</button>\n\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay overlay-partial\"></loading-indicator>","import {ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {finalize} from 'rxjs/operators';\nimport {OverlayPanelRef} from '@common/core/ui/overlay-panel/overlay-panel-ref';\nimport {GenericBackendResponse} from '@common/core/types/backend-response';\nimport {HttpCacheClient} from '@common/core/http/http-cache-client';\n\n@Component({\n    selector: 'icon-selector',\n    templateUrl: './icon-selector.component.html',\n    styleUrls: ['./icon-selector.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IconSelectorComponent implements OnInit {\n    public icons$: BehaviorSubject<string[]> = new BehaviorSubject([]);\n    public loading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n    @Output() iconSelected = new EventEmitter<string>();\n\n    constructor(\n        private http: HttpCacheClient,\n        private overlayPanelRef: OverlayPanelRef,\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.http.get<GenericBackendResponse<{icons: string[]}>>('admin/icons')\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.icons$.next(response.icons);\n            });\n    }\n\n    public selectIcon(icon: string) {\n        // component is used inline\n        if (this.iconSelected.observers.length) {\n            this.iconSelected.next(icon);\n        // component is used as overlay panel\n        } else {\n            this.overlayPanelRef.emitValue(icon);\n            this.overlayPanelRef.close();\n        }\n\n    }\n}\n","<div class=\"title\" trans>Menu Items</div>\r\n\r\n<mat-accordion cdkDropList (cdkDropListDropped)=\"reorderMenuItems($event)\" *ngIf=\"menus.activeMenu$ | async as activeMenu; else noActiveMenu\">\r\n    <mat-expansion-panel\r\n            class=\"mat-elevation-z menu-item-container\"\r\n            cdkDrag\r\n            *ngFor=\"let menuItem of activeMenu.items\"\r\n            (opened)=\"toggleMenuItem(menuItem)\"\r\n            (closed)=\"toggleMenuItem(menuItem)\"\r\n            [attr.data-id]=\"menuItem.id\"\r\n    >\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n                <mat-icon class=\"drag-handle\" cdkDragHandle svgIcon=\"drag-handle\"></mat-icon>\r\n                <span class=\"name\">{{menuItem.label}}</span>\r\n            </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n\r\n        <div class=\"many-inputs menu-item-list\">\r\n            <div class=\"input-container\">\r\n                <label for=\"{{menuItem.id + '-label'}}\" trans>Label</label>\r\n                <input type=\"text\" [(ngModel)]=\"menuItem.label\" id=\"{{menuItem.id + '-label'}}\" (ngModelChange)=\"menus.commitChanges()\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"{{menuItem.id + '-type'}}\" trans>Type</label>\r\n                <select [(ngModel)]=\"menuItem.type\" id=\"{{menuItem.id + '-type'}}\" (ngModelChange)=\"menus.commitChanges()\">\r\n                    <option value=\"link\" trans>Link</option>\r\n                    <option value=\"route\" trans>Route</option>\r\n                    <option value=\"page\" trans>Page</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"{{menuItem.id + '-action'}}\" trans>Action</label>\r\n                <input type=\"text\" [(ngModel)]=\"menuItem.action\" id=\"{{menuItem.id + '-action'}}\" (ngModelChange)=\"menus.commitChanges()\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"{{menuItem.id + '-condition'}}\" trans>Condition</label>\r\n                <select [(ngModel)]=\"menuItem.condition\" id=\"{{menuItem.id + '-condition'}}\" (ngModelChange)=\"menus.commitChanges()\">\r\n                    <option [ngValue]=\"null\" trans>None</option>\r\n                    <option value=\"auth\" trans>Show to Logged in Users Only</option>\r\n                    <option value=\"guest\" trans>Show to Guest Users Only</option>\r\n                    <option value=\"admin\" trans>Show to Admin Only</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"{{menuItem.id + '-target'}}\" trans>Open link in</label>\r\n                <select [(ngModel)]=\"menuItem.target\" id=\"{{menuItem.id + '-target'}}\" (ngModelChange)=\"menus.commitChanges()\">\r\n                    <option value=\"_self\" trans>Same Window</option>\r\n                    <option value=\"_blank\" trans>New Window</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"input-container icon-input-container\" #iconInput (click)=\"openIconSelector(iconInput, menuItem)\">\r\n                <label for=\"{{menuItem.id + '-icon'}}\" trans>Icon</label>\r\n                <input type=\"text\" readonly [(ngModel)]=\"menuItem.icon\" id=\"{{menuItem.id + '-icon'}}\" placeholder=\"(Optional)\" trans-placeholder>\r\n                <mat-icon [svgIcon]=\"menuItem.icon\"></mat-icon>\r\n            </div>\r\n        </div>\r\n\r\n        <mat-action-row>\r\n            <button mat-button color=\"warn\" class=\"delete-button\" (click)=\"confirmMenuItemDeletion()\" trans>Remove</button>\r\n        </mat-action-row>\r\n    </mat-expansion-panel>\r\n</mat-accordion>\r\n\r\n<ng-template #noActiveMenu>\r\n    <div class=\"no-menu-items\" trans>This menu has no items yet.</div>\r\n</ng-template>\r\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {CdkDragDrop} from '@angular/cdk/drag-drop';\r\nimport {MenuItem} from '@common/core/ui/custom-menu/menu-item';\r\nimport {MenuEditor} from '@common/admin/appearance/panels/menus-appearance-panel/menus/menu-editor.service';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport {IconSelectorComponent} from '@common/shared/icon-selector/icon-selector.component';\r\nimport {RIGHT_POSITION} from '@common/core/ui/overlay-panel/positions/right-position';\r\n\r\n@Component({\r\n    selector: 'menu-items',\r\n    templateUrl: './menu-items.component.html',\r\n    styleUrls: ['./menu-items.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MenuItemsComponent implements OnDestroy {\r\n    public selectedMenuItem: MenuItem;\r\n    public subscriptions: Subscription[] = [];\r\n\r\n    constructor(\r\n        public menus: MenuEditor,\r\n        private modal: Modal,\r\n        private overlayPanel: OverlayPanel,\r\n        private cd: ChangeDetectorRef,\r\n    ) {}\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(subscription => {\r\n            subscription && subscription.unsubscribe();\r\n        });\r\n    }\r\n\r\n    public reorderMenuItems(e: CdkDragDrop<void>) {\r\n        this.menus.reorderActiveMenuItems(e.previousIndex, e.currentIndex);\r\n    }\r\n\r\n    /**\r\n     * Toggle specified menu item settings panel visibility.\r\n     */\r\n    public toggleMenuItem(item: MenuItem) {\r\n        if (this.selectedMenuItem === item) {\r\n            this.selectedMenuItem = null;\r\n        } else {\r\n            this.selectedMenuItem = item;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ask user to confirm menu item deletion.\r\n     */\r\n    public confirmMenuItemDeletion() {\r\n        this.modal.show(ConfirmModalComponent, {\r\n            title: 'Delete Menu Item',\r\n            body: 'Are you sure you want to delete this menu item?',\r\n            ok: 'Delete'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.menus.removeItem(this.selectedMenuItem);\r\n            this.selectedMenuItem = null;\r\n        });\r\n    }\r\n\r\n    public openIconSelector(origin: HTMLElement, menuItem: MenuItem) {\r\n        this.overlayPanel.open(IconSelectorComponent, {\r\n            position: RIGHT_POSITION,\r\n            origin: new ElementRef(origin),\r\n        }).valueChanged().subscribe(icon => {\r\n            menuItem.icon = icon;\r\n            this.menus.commitChanges();\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n}\r\n","<appearance-panel-meta [path]=\"['Menus', menus.activeMenu$.value && menus.activeMenu$.value.name]\" (back)=\"openPreviousPanel()\"></appearance-panel-meta>\r\n\r\n<div class=\"appearance-panel-content\">\r\n    <div class=\"menu-panel\" *ngIf=\"menus.activeMenu$ | async as activeMenu; else allMenuList\">\r\n        <div class=\"many-inputs menu-settings\">\r\n            <div class=\"input-container\">\r\n                <label for=\"menu-name\" trans>Menu Name</label>\r\n                <input type=\"text\" id=\"menu-name\" [(ngModel)]=\"activeMenu.name\" (ngModelChange)=\"menus.commitChanges()\">\r\n            </div>\r\n\r\n            <div class=\"input-container\">\r\n                <label for=\"menu-position\" trans>Menu Position</label>\r\n                <select id=\"menu-position\" [(ngModel)]=\"activeMenu.position\" (ngModelChange)=\"menus.commitChanges()\">\r\n                    <option [ngValue]=\"position\" *ngFor=\"let position of appearance.config.menus.positions\">{{getDisplayName(position)}}</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n\r\n        <menu-items></menu-items>\r\n\r\n        <div class=\"action-buttons\">\r\n            <button mat-button color=\"warn\" (click)=\"confirmMenuDeletion()\" trans>Delete Menu</button>\r\n            <button class=\"button flat add-item-button\" mat-button color=\"accent\" (click)=\"openAddItemPanel()\" trans>Add Item</button>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #allMenuList>\r\n        <div class=\"menus\">\r\n            <div class=\"menu nav-item\" *ngFor=\"let menu of menus.allMenus$ | async\" (click)=\"setActiveMenu(menu)\">\r\n                <span class=\"name\">{{menu.name}}</span>\r\n                <mat-icon svgIcon=\"keyboard-arrow-right\" class=\"actions\"></mat-icon>\r\n            </div>\r\n\r\n            <div class=\"action-buttons\">\r\n                <button mat-button color=\"accent\" class=\"button primary\" (click)=\"menus.create()\" trans>Add a Menu</button>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>","import {ChangeDetectionStrategy, Component, ElementRef} from '@angular/core';\r\nimport {AppearanceEditor} from '@common/admin/appearance/appearance-editor/appearance-editor.service';\r\nimport {MenuEditor} from '@common/admin/appearance/panels/menus-appearance-panel/menus/menu-editor.service';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport {RIGHT_POSITION} from '@common/core/ui/overlay-panel/positions/right-position';\r\nimport {AddMenuItemPanelComponent} from '@common/admin/appearance/panels/menus-appearance-panel/menus/add-menu-item-panel/add-menu-item-panel.component';\r\nimport {Menu} from '@common/core/ui/custom-menu/menu';\r\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\r\n\r\n@Component({\r\n    selector: 'menus-appearance-panel',\r\n    templateUrl: './menus-appearance-panel.component.html',\r\n    styleUrls: ['./menus-appearance-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MenusAppearancePanelComponent {\r\n    constructor(\r\n        public appearance: AppearanceEditor,\r\n        public menus: MenuEditor,\r\n        private modal: Modal,\r\n        private settings: Settings,\r\n        private panel: OverlayPanel,\r\n        private el: ElementRef<HTMLElement>,\r\n    ) {\r\n        this.menus.setFromJson(this.settings.get('menus'));\r\n    }\r\n\r\n    public openAddItemPanel() {\r\n        const position = RIGHT_POSITION.slice();\r\n        position[0].offsetX = 10;\r\n        position[1].offsetX = 10;\r\n        this.panel.open(AddMenuItemPanelComponent, {\r\n            position: position,\r\n            origin: this.el,\r\n            panelClass: 'add-menu-item-panel-container'\r\n        });\r\n    }\r\n\r\n    public openPreviousPanel() {\r\n        if (this.menus.activeMenu$.value) {\r\n            this.menus.activeMenu$.next(null);\r\n        } else {\r\n            this.appearance.closeActivePanel();\r\n        }\r\n    }\r\n\r\n    public setActiveMenu(menu: Menu) {\r\n        this.menus.activeMenu$.next(menu);\r\n    }\r\n\r\n    public confirmMenuDeletion() {\r\n        this.modal.show(ConfirmModalComponent, {\r\n            title: 'Delete Menu',\r\n            body: 'Are you sure you want to delete this menu?',\r\n            ok: 'Delete'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.menus.deleteActive();\r\n        });\r\n    }\r\n\r\n    public getDisplayName(name: string) {\r\n        return name.replace(/-/g, ' ');\r\n    }\r\n}\r\n","<appearance-panel-meta [path]=\"['Seo Settings']\" (back)=\"editor.closeActivePanel()\"></appearance-panel-meta>\n\n<div [formGroup]=\"form\" class=\"appearance-panel-content many-inputs\">\n    <ng-container *ngFor=\"let field of seoFields\">\n        <div class=\"input-container\">\n            <label [for]=\"field.key\" trans>{{field.name}}</label>\n            <textarea type=\"text\" [id]=\"field.key\" [formControlName]=\"field.key\" [placeholder]=\"field.defaultValue\" rows=\"2\"></textarea>\n        </div>\n    </ng-container>\n</div>","import {Component, OnInit, ChangeDetectionStrategy} from '@angular/core';\nimport {AppearanceEditor} from '@common/admin/appearance/appearance-editor/appearance-editor.service';\nimport {FormBuilder} from '@angular/forms';\n\ninterface SeoField {\n    name: string;\n    key: string;\n    defaultValue: string;\n    value: string;\n}\n\n@Component({\n    selector: 'seo-appearance-panel',\n    templateUrl: './seo-appearance-panel.component.html',\n    styleUrls: ['./seo-appearance-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SeoAppearancePanelComponent implements OnInit {\n    public seoFields: SeoField[];\n    public form = this.fb.group({});\n\n    constructor(\n        public editor: AppearanceEditor,\n        private fb: FormBuilder,\n    ) {}\n\n    ngOnInit() {\n        this.seoFields = this.editor.defaultSettings['seo_fields'];\n\n        this.seoFields.forEach(field => {\n            this.form.addControl(field.key, this.fb.control(field.value));\n        });\n\n        this.form.valueChanges.subscribe(value => {\n            this.editor.addChanges(value);\n        });\n    }\n}\n","<div class=\"modal-header\">\r\n    <h2 class=\"modal-title\" mat-dialog-title trans>Code Editor</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n    <div class=\"editor-container\">\r\n        <p class=\"info\" *ngIf=\"data.language === 'html'\" trans>If entering javascript, wrap it with &lt;script>&lt;/script> tag.</p>\r\n        <div class=\"editor\" #editor></div>\r\n    </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <button (click)=\"close()\" type=\"button\" mat-button trans>Cancel</button>\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" (click)=\"confirm()\" [disabled]=\"syntaxInvalid$ | async\" trans>Update</button>\r\n</mat-dialog-actions>\r\n\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>","import {ChangeDetectionStrategy, Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {filter} from 'rxjs/operators';\r\nimport {ESCAPE} from '@angular/cdk/keycodes';\r\nimport {LazyLoaderService} from '@common/core/utils/lazy-loader.service';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\ndeclare let ace;\r\n\r\nexport interface CodeEditorModalData {\r\n    contents?: string;\r\n    language: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'code-editor-modal',\r\n    templateUrl: './code-editor-modal.component.html',\r\n    styleUrls: ['./code-editor-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CodeEditorModalComponent implements OnInit {\r\n    @ViewChild('editor', { static: true }) editorEl: ElementRef;\r\n\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public syntaxInvalid$ = new BehaviorSubject<boolean>(false);\r\n    private editor;\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<CodeEditorModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: CodeEditorModalData,\r\n        private lazyLoader: LazyLoaderService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.initEditor(this.data.contents, this.data.language);\r\n        this.overrideDialogCloseEvents();\r\n    }\r\n\r\n    public confirm() {\r\n        this.close(this.editor.getValue());\r\n    }\r\n\r\n    public close(value?: string) {\r\n        this.dialogRef.close(value);\r\n    }\r\n\r\n    private initEditor(contents: string, language = 'html') {\r\n        this.loading$.next(true);\r\n        this.lazyLoader.loadAsset('js/ace/ace.js', {type: 'js'}).then(() => {\r\n            this.editor = ace.edit(this.editorEl.nativeElement);\r\n            this.editor.getSession().setMode('ace/mode/' + language);\r\n            this.editor.setTheme('ace/theme/chrome');\r\n            this.editor.$blockScrolling = Infinity;\r\n            if (contents) this.editor.setValue(contents, 1);\r\n\r\n            this.editor.getSession().on('changeAnnotation', () => {\r\n                const annotations = this.editor.getSession().getAnnotations() as any[];\r\n\r\n                // hide !doctype syntax error\r\n                if (annotations[0] && /doctype first/.test(annotations[0].text)) {\r\n                    annotations.splice(0, 1);\r\n                    this.editor.getSession().setAnnotations(annotations);\r\n                    return;\r\n                }\r\n\r\n                // prevent editor submit if there are syntax errors\r\n                const syntaxInvalid = this.editor\r\n                    .getSession()\r\n                    .getAnnotations()\r\n                    .filter(a => a.type === 'error')\r\n                    .length > 0;\r\n                this.syntaxInvalid$.next(syntaxInvalid);\r\n            });\r\n            this.loading$.next(false);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Need to always send dialog data, regardless of how it was closed.\r\n     * Angular material does not provide easy way to do this, so\r\n     * we need to override backdrop click and escape key close events.\r\n     */\r\n    private overrideDialogCloseEvents() {\r\n        this.dialogRef.disableClose = true;\r\n\r\n        // close on backdrop click\r\n        this.dialogRef.backdropClick().subscribe(() => {\r\n            this.close();\r\n        });\r\n\r\n        // close on escape key\r\n        this.dialogRef.keydownEvents()\r\n            .pipe(filter(event => event.keyCode === ESCAPE))\r\n            .subscribe(() => this.close());\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {AppearanceEditor} from '@common/admin/appearance/appearance-editor/appearance-editor.service';\nimport {FormBuilder} from '@angular/forms';\nimport {CodeEditorModalComponent} from '@common/admin/appearance/panels/custom-code-appearance-panel/code-editor-modal/code-editor-modal.component';\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\nimport {Toast} from '@common/core/ui/toast.service';\nimport {SetCustomCss, SetCustomHtml} from '@common/shared/appearance/commands/appearance-commands';\n\n@Component({\n    selector: 'custom-code-appearance-panel',\n    templateUrl: './custom-code-appearance-panel.component.html',\n    styleUrls: ['./custom-code-appearance-panel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomCodeAppearancePanelComponent implements OnInit {\n    public form = this.fb.group({\n        'custom-code.css': [''],\n        'custom-code.html': [''],\n    });\n\n    constructor(\n        public editor: AppearanceEditor,\n        private fb: FormBuilder,\n        private modal: Modal,\n        private toast: Toast,\n    ) {}\n\n    ngOnInit() {\n        const defaults = {};\n        Object.keys(this.form.controls).forEach(key => {\n            defaults[key] = this.editor.currentValue(key);\n        });\n        this.form.patchValue(defaults);\n    }\n\n    public openModal(type: 'css'|'html') {\n        const key = 'custom-code.' + type;\n        const initialValue = this.form.value[key] || '',\n            params = {contents: this.form.value[key], language: type};\n        this.modal.open(CodeEditorModalComponent, params)\n            .afterClosed()\n            .subscribe(value => {\n                // undefined means user closed modal without clicking \"update\" button\n                if (value === undefined || initialValue === value) return;\n                const newValue = {[key]: value};\n                this.form.patchValue(newValue);\n                this.editor.saveChanges(newValue).subscribe(() => {\n                    this.addCodeToPreview(type, value);\n                    this.toast.open('Custom code saved');\n                });\n            });\n    }\n\n    private addCodeToPreview(type: 'css'|'html', content: string) {\n        if (type === 'css') {\n            this.editor.postMessage(new SetCustomCss(content));\n        } else {\n            this.editor.postMessage(new SetCustomHtml(content));\n        }\n    }\n}\n","<appearance-panel-meta [path]=\"['Custom Code']\" (back)=\"editor.closeActivePanel()\"></appearance-panel-meta>\n\n<div class=\"appearance-panel-content\">\n   <button type=\"button\" class=\"nav-item\" (click)=\"openModal('css')\">\n      <span class=\"text\" trans>Custom CSS</span>\n      <span class=\"actions\" trans>Modify</span>\n   </button>\n   <button class=\"nav-item\" (click)=\"openModal('html')\">\n      <span class=\"text\" trans>Custom HTML & Javascript</span>\n      <span class=\"actions\" trans>Modify</span>\n   </button>\n</div>","<mat-sidenav-container>\r\n    <mat-sidenav [opened]=\"!leftColumnIsHidden\" [mode]=\"(breakpoints.isMobile$ | async) ? 'over' : 'side'\" class=\"sidebar\">\r\n        <div class=\"header\">\r\n            <div class=\"back-button\" (click)=\"closeEditor()\">\r\n                <mat-icon svgIcon=\"close\"></mat-icon>\r\n            </div>\r\n            <div class=\"title\" trans>Appearance Editor</div>\r\n            <button\r\n                    mat-raised-button\r\n                    color=\"accent\"\r\n                    class=\"button primary save-button\"\r\n                    (click)=\"editor.saveChanges()\"\r\n                    [disabled]=\"!(editor.changes$ | async) || (editor.loading$ | async)\"\r\n            >\r\n                <span *ngIf=\"editor.changes$ | async; else saved\" trans>Save</span>\r\n                <ng-template #saved>\r\n                    <span trans>Saved</span>\r\n                </ng-template>\r\n            </button>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"editor.activePanel$ | async as activePanel; else navigation\">\r\n            <ng-container [ngSwitch]=\"activePanel.name\">\r\n                <general-appearance-panel *ngSwitchCase=\"'general'\"></general-appearance-panel>\r\n                <themes-appearance-panel *ngSwitchCase=\"'themes'\"></themes-appearance-panel>\r\n                <menus-appearance-panel *ngSwitchCase=\"'menus'\"></menus-appearance-panel>\r\n                <seo-appearance-panel *ngSwitchCase=\"'seo-settings'\"></seo-appearance-panel>\r\n                <custom-code-appearance-panel *ngSwitchCase=\"'custom-code'\"></custom-code-appearance-panel>\r\n                <ng-container *ngSwitchDefault>\r\n                    <ng-template *ngIf=\"panelPortal$ | async as portal\" [cdkPortalOutlet]=\"portal\"></ng-template>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n\r\n        <ng-template #navigation>\r\n            <div class=\"root-navigation\">\r\n                <a class=\"nav-item\" [routerLink]=\"[]\" [queryParams]=\"{panel: slugify(section.name)}\" *ngFor=\"let section of editor.config.sections\">\r\n                    <span class=\"text\" trans>{{viewName(section.name)}}</span>\r\n                    <mat-icon class=\"actions\" svgIcon=\"keyboard-arrow-right\"></mat-icon>\r\n                </a>\r\n            </div>\r\n        </ng-template>\r\n\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n        <div class=\"live-preview\">\r\n            <iframe src=\"about:blank\" #iframe></iframe>\r\n        </div>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n\r\n<button mat-fab (click)=\"toggleLeftSidebar()\" class=\"sidebar-toggle-button\">\r\n    <mat-icon svgIcon=\"edit\"></mat-icon>\r\n</button>","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    Inject,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AppearanceEditor} from './appearance-editor/appearance-editor.service';\r\nimport {slugifyString} from '@common/core/utils/slugify-string';\r\nimport {Subscription} from 'rxjs';\r\nimport {ComponentPortal} from '@angular/cdk/portal';\r\nimport {map} from 'rxjs/operators';\r\nimport {BreakpointsService} from '@common/core/ui/breakpoints.service';\r\nimport {APPEARANCE_EDITOR_CONFIG, AppearanceEditorConfig} from './appearance-editor-config.token';\r\n\r\n@Component({\r\n    selector: 'appearance',\r\n    templateUrl: './appearance.component.html',\r\n    styleUrls: ['./appearance.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AppearanceComponent implements OnInit, OnDestroy {\r\n    @ViewChild('iframe', { static: true }) iframe: ElementRef;\r\n    private routerSub: Subscription;\r\n    public leftColumnIsHidden = false;\r\n\r\n    public panelPortal$ = this.editor.activePanel$.pipe(map(panel => {\r\n        return (panel && panel.component) ? new ComponentPortal(panel.component) : null;\r\n    }));\r\n\r\n    constructor(\r\n        public editor: AppearanceEditor,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        public breakpoints: BreakpointsService,\r\n        @Inject(APPEARANCE_EDITOR_CONFIG) @Optional() public config: AppearanceEditorConfig[],\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.leftColumnIsHidden = this.breakpoints.isMobile$.value;\r\n        this.editor.init(\r\n            this.iframe.nativeElement,\r\n            this.route.snapshot.data.defaultSettings,\r\n            this.config,\r\n        );\r\n        this.routerSub = this.route.queryParams\r\n            .subscribe((params: {panel?: string}) => {\r\n                this.editor.openPanel(params.panel);\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.routerSub && this.routerSub.unsubscribe();\r\n    }\r\n\r\n    public closeEditor() {\r\n        this.router.navigate(['admin']);\r\n    }\r\n\r\n    public slugify(str: string) {\r\n        return slugifyString(str);\r\n    }\r\n\r\n    public viewName(name: string) {\r\n        return name.replace('-', ' ');\r\n    }\r\n\r\n    public toggleLeftSidebar() {\r\n        this.leftColumnIsHidden = !this.leftColumnIsHidden;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanDeactivate} from '@angular/router';\r\nimport {AppearanceComponent} from './appearance.component';\r\nimport {ConfirmModalComponent} from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport {AppearanceEditor} from '@common/admin/appearance/appearance-editor/appearance-editor.service';\r\nimport {Modal} from '@common/core/ui/dialogs/modal.service';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CanDeactivateAppearance implements CanDeactivate<AppearanceComponent> {\r\n    constructor(\r\n        private editor: AppearanceEditor,\r\n        private modal: Modal,\r\n    ) {}\r\n\r\n    canDeactivate(): Observable<boolean>|boolean {\r\n        if ( ! this.editor.changes$.value) return true;\r\n\r\n        return this.modal.show(ConfirmModalComponent, {\r\n            title: 'Close Appearance Editor',\r\n            body: 'Are you sure you want to close appearance editor?',\r\n            bodyBold: 'All unsaved changes will be lost.',\r\n            ok: 'Close',\r\n            cancel: 'Stay',\r\n        }).afterClosed();\r\n    }\r\n}\r\n","import {RouterModule, Routes} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {AppearanceComponent} from './appearance.component';\r\nimport {CanDeactivateAppearance} from './can-deactivate-appearance.guard';\r\nimport {AuthGuard} from '../../guards/auth-guard.service';\r\nimport {AppearanceEditorResolver} from './appearance-editor/appearance-editor-resolver.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AppearanceComponent,\r\n        data: {permissions: ['appearance.update']},\r\n        resolve: {defaultSettings: AppearanceEditorResolver},\r\n        canActivate: [AuthGuard],\r\n        canDeactivate: [CanDeactivateAppearance],\r\n        children: [\r\n            {path: ''},\r\n            {path: ':panel'},\r\n            {path: ':panel/:activeItem'},\r\n        ]\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppearanceRoutingModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {catchError, mergeMap} from 'rxjs/operators';\r\nimport {EMPTY, Observable, of} from 'rxjs';\r\nimport {GenericBackendResponse} from '@common/core/types/backend-response';\r\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AppearanceEditorResolver implements Resolve<GenericBackendResponse<{[key: string]: any}>> {\r\n    constructor(\r\n        private router: Router,\r\n        private http: AppHttpClient\r\n    ) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<GenericBackendResponse<{[key: string]: any}>> {\r\n        return this.http.get<GenericBackendResponse<{[key: string]: any}>>('admin/appearance/values').pipe(\r\n            catchError(() => {\r\n                this.router.navigate(['/admin']);\r\n                return EMPTY;\r\n            }),\r\n            mergeMap(response => {\r\n                if (response) {\r\n                    return of(response);\r\n                } else {\r\n                    this.router.navigate(['/admin']);\r\n                    return EMPTY;\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IconSelectorComponent} from '@common/shared/icon-selector/icon-selector.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\n\n\n@NgModule({\n    declarations: [\n        IconSelectorComponent,\n    ],\n    imports: [\n        CommonModule,\n        LoadingIndicatorModule,\n\n        MatButtonModule,\n        MatIconModule,\n    ],\n    exports: [\n        IconSelectorComponent,\n    ]\n})\nexport class IconSelectorModule {\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {AppearanceComponent} from './appearance.component';\r\nimport {MenusAppearancePanelComponent} from './panels/menus-appearance-panel/menus-appearance-panel.component';\r\nimport {AddMenuItemPanelComponent} from './panels/menus-appearance-panel/menus/add-menu-item-panel/add-menu-item-panel.component';\r\nimport {AppearancePanelMetaComponent} from './appearance-panel-meta/appearance-panel-meta.component';\r\nimport {MenuItemsComponent} from './panels/menus-appearance-panel/menus/menu-items/menu-items.component';\r\nimport {AppearanceRoutingModule} from './appearance-routing.module';\r\nimport {CodeEditorModalComponent} from './panels/custom-code-appearance-panel/code-editor-modal/code-editor-modal.component';\r\nimport {ThemesAppearancePanelComponent} from './panels/themes-appearance-panel/themes-appearance-panel.component';\r\nimport {CrupdateCssThemeModalComponent} from './panels/themes-appearance-panel/crupdate-css-theme-modal/crupdate-css-theme-modal.component';\r\nimport {CssThemeColorsPanelComponent} from '@common/admin/appearance/panels/themes-appearance-panel/css-theme-colors-panel/css-theme-colors-panel.component';\r\nimport {GeneralAppearancePanelComponent} from '@common/admin/appearance/panels/general-appearance-panel/general-appearance-panel.component';\r\nimport {HighlightInPreviewDirective} from './highlight-in-preview.directive';\r\nimport {SeoAppearancePanelComponent} from '@common/admin/appearance/panels/seo-appearance-panel/seo-appearance-panel.component';\r\nimport {CustomCodeAppearancePanelComponent} from '@common/admin/appearance/panels/custom-code-appearance-panel/custom-code-appearance-panel.component';\r\nimport {AppearanceImageInputComponent} from '@common/admin/appearance/appearance-image-input/appearance-image-input.component';\r\nimport {IconSelectorModule} from '@common/shared/icon-selector/icon-selector.module';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport {ImageOrIconModule} from '@common/core/ui/image-or-icon/image-or-icon.module';\r\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {ColorPickerInputModule} from '@common/core/ui/color-picker/color-picker-input/color-picker-input.module';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {APPEARANCE_EDITOR_CONFIG, DEFAULT_APPEARANCE_EDITOR_CONFIG} from './appearance-editor-config.token';\r\n\r\n@NgModule({\r\n    imports: [\r\n        AppearanceRoutingModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        IconSelectorModule,\r\n        TranslationsModule,\r\n        ImageOrIconModule,\r\n        LoadingIndicatorModule,\r\n        ColorPickerInputModule,\r\n\r\n        // material\r\n        MatMenuModule,\r\n        MatProgressBarModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        DragDropModule,\r\n        MatSidenavModule,\r\n        PortalModule,\r\n        MatSlideToggleModule,\r\n    ],\r\n    exports: [\r\n        AppearancePanelMetaComponent,\r\n        HighlightInPreviewDirective,\r\n        AppearanceImageInputComponent,\r\n    ],\r\n    declarations: [\r\n        AppearanceComponent,\r\n        AddMenuItemPanelComponent,\r\n        AppearancePanelMetaComponent,\r\n        MenuItemsComponent,\r\n        CodeEditorModalComponent,\r\n        CrupdateCssThemeModalComponent,\r\n        CssThemeColorsPanelComponent,\r\n        AppearanceImageInputComponent,\r\n        MenusAppearancePanelComponent,\r\n        ThemesAppearancePanelComponent,\r\n        GeneralAppearancePanelComponent,\r\n        SeoAppearancePanelComponent,\r\n        CustomCodeAppearancePanelComponent,\r\n        HighlightInPreviewDirective,\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: APPEARANCE_EDITOR_CONFIG,\r\n            useValue: DEFAULT_APPEARANCE_EDITOR_CONFIG,\r\n            multi: true,\r\n        }\r\n    ]\r\n})\r\nexport class BaseAppearanceModule {\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {HomepageAppearancePanelComponent} from './homepage-appearance-panel/homepage-appearance-panel.component';\nimport {APPEARANCE_EDITOR_CONFIG} from '../../../common/admin/appearance/appearance-editor-config.token';\nimport {APP_APPEARANCE_CONFIG} from './app-appearance-config';\nimport {ColorPickerInputModule} from '../../../common/core/ui/color-picker/color-picker-input/color-picker-input.module';\nimport {TranslationsModule} from '../../../common/core/translations/translations.module';\nimport {BaseAppearanceModule} from '../../../common/admin/appearance/base-appearance.module';\n\n\n@NgModule({\n    declarations: [\n        HomepageAppearancePanelComponent,\n    ],\n    imports: [\n        CommonModule,\n        BaseAppearanceModule,\n        ReactiveFormsModule,\n        ColorPickerInputModule,\n        TranslationsModule,\n\n        // material\n        MatIconModule,\n        MatButtonModule,\n        TranslationsModule,\n        MatSliderModule,\n    ],\n    providers: [\n        {\n            provide: APPEARANCE_EDITOR_CONFIG,\n            useValue: APP_APPEARANCE_CONFIG,\n            multi: true,\n        }\n    ]\n})\nexport class AppAppearanceModule {\n}\n","import { ConnectedPosition } from '@angular/cdk/overlay';\r\n\r\nexport const RIGHT_POSITION: ConnectedPosition[] = [\r\n    {originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center', offsetX: 5},\r\n    {originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center', offsetX: 5},\r\n];\r\n"]}